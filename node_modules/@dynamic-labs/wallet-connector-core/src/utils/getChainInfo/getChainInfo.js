'use client'
const chainsInfo = [
    {
        blockchainName: 'Algorand',
        displayName: 'Algorand',
        name: 'algorand',
        symbol: 'ALGO',
    },
    {
        blockchainName: 'Bitcoin',
        displayName: 'Bitcoin',
        name: 'bitcoin',
        symbol: 'BTC',
    },
    {
        blockchainName: 'Ethereum',
        displayName: 'EVM',
        name: 'evm',
        symbol: 'ETH',
    },
    {
        blockchainName: 'Flow',
        displayName: 'Flow',
        name: 'flow',
        symbol: 'FLOW',
    },
    {
        blockchainName: 'Solana',
        displayName: 'Solana',
        name: 'solana',
        symbol: 'SOL',
    },
    {
        blockchainName: 'Starknet',
        displayName: 'Starknet',
        name: 'starknet',
        symbol: 'ETH',
    },
    {
        blockchainName: 'Cosmos',
        displayName: 'Cosmos',
        name: 'cosmos',
        symbol: 'COSMOS',
    },
    {
        blockchainName: 'Bitcoin',
        displayName: 'Bitcoin',
        name: 'bitcoin',
        symbol: 'BTC',
    },
];
const chainOverrides = {
    algo: 'algorand',
    bip122: 'bitcoin',
    btc: 'bitcoin',
    eip155: 'evm',
    eth: 'evm',
    sol: 'solana',
    stark: 'starknet',
};
let chainInfoOverrides;
const setChainInfoOverrides = (overrides) => {
    chainInfoOverrides = overrides;
};
const getChainInfo = (chain) => {
    var _a;
    const lowerCasedChain = chain.toLowerCase();
    const normalizedChain = (_a = chainOverrides[lowerCasedChain]) !== null && _a !== void 0 ? _a : lowerCasedChain;
    const chainInfo = chainsInfo.find((info) => info.name === normalizedChain ||
        info.symbol.toLocaleLowerCase() === normalizedChain);
    if (!chainInfo) {
        return;
    }
    return chainInfo;
};
const getChainInfoWithOverrides = (chain) => {
    var _a, _b;
    const chainInfo = getChainInfo(chain);
    if (!chainInfo) {
        return;
    }
    const overrides = chainInfoOverrides === null || chainInfoOverrides === void 0 ? void 0 : chainInfoOverrides[chainInfo.name];
    const chainInfoClone = Object.assign({}, chainInfo);
    if (overrides) {
        chainInfoClone.blockchainName =
            (_a = overrides.displayName) !== null && _a !== void 0 ? _a : chainInfo.blockchainName;
        chainInfoClone.displayName = (_b = overrides.displayName) !== null && _b !== void 0 ? _b : chainInfo.displayName;
    }
    return chainInfoClone;
};

export { getChainInfo, getChainInfoWithOverrides, setChainInfoOverrides };
