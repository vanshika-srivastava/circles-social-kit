import { PasswordSourceTypeEnum } from '@dynamic-labs/sdk-api-core';
import { WalletConnectorBase } from '.';
export type RawPrivateKey = {
    keyPath: string;
    ecKeyPublic: string;
    ecKeyPrivate: string;
};
export type ExtendedPrivateKey = {
    keyPath: string;
    xPrivateKey: string;
};
export interface ICoinbaseMPCWalletConnector extends WalletConnectorBase {
    changePasscode(newPasscode: string, oldPasscode?: string): Promise<boolean>;
    exportWalletKeys(): Promise<ExtendedPrivateKey[] | RawPrivateKey[]>;
    generateWallet(source: PasswordSourceTypeEnum, passcode: string): Promise<string | undefined>;
    setAuthTokenFetcher(func: () => Promise<string>): void;
    setBackupCodeFetcher(func: () => Promise<string>): void;
    setPasscodeFetcher(func: () => Promise<string>): void;
    setRequiredPassword(isRequired: boolean): void;
    validatePasscode(passcode: string): Promise<boolean>;
}
