'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var runtime = require('../runtime.cjs');
var AuthenticationExtensionsClientOutputs = require('./AuthenticationExtensionsClientOutputs.cjs');
var AuthenticatorAssertionResponse = require('./AuthenticatorAssertionResponse.cjs');
var AuthenticatorAttachment = require('./AuthenticatorAttachment.cjs');
var PublicKeyCredentialType = require('./PublicKeyCredentialType.cjs');

/* tslint:disable */
function PasskeyAuthRequestFromJSON(json) {
    return PasskeyAuthRequestFromJSONTyped(json);
}
function PasskeyAuthRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': json['id'],
        'rawId': json['rawId'],
        'response': AuthenticatorAssertionResponse.AuthenticatorAssertionResponseFromJSON(json['response']),
        'authenticatorAttachment': !runtime.exists(json, 'authenticatorAttachment') ? undefined : AuthenticatorAttachment.AuthenticatorAttachmentFromJSON(json['authenticatorAttachment']),
        'clientExtensionResults': AuthenticationExtensionsClientOutputs.AuthenticationExtensionsClientOutputsFromJSON(json['clientExtensionResults']),
        'type': PublicKeyCredentialType.PublicKeyCredentialTypeFromJSON(json['type']),
    };
}
function PasskeyAuthRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'rawId': value.rawId,
        'response': AuthenticatorAssertionResponse.AuthenticatorAssertionResponseToJSON(value.response),
        'authenticatorAttachment': AuthenticatorAttachment.AuthenticatorAttachmentToJSON(value.authenticatorAttachment),
        'clientExtensionResults': AuthenticationExtensionsClientOutputs.AuthenticationExtensionsClientOutputsToJSON(value.clientExtensionResults),
        'type': PublicKeyCredentialType.PublicKeyCredentialTypeToJSON(value.type),
    };
}

exports.PasskeyAuthRequestFromJSON = PasskeyAuthRequestFromJSON;
exports.PasskeyAuthRequestFromJSONTyped = PasskeyAuthRequestFromJSONTyped;
exports.PasskeyAuthRequestToJSON = PasskeyAuthRequestToJSON;
