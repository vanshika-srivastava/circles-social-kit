/**
 * Dashboard API
 * Dashboard API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { EcdsaValidatorOptions } from './EcdsaValidatorOptions';
import { ProviderAgreement } from './ProviderAgreement';
import { ProviderEnum } from './ProviderEnum';
import { SmsCountryCode } from './SmsCountryCode';
/**
 *
 * @export
 * @interface Provider
 */
export interface Provider {
    /**
     *
     * @type {string}
     * @memberof Provider
     */
    id?: string;
    /**
     *
     * @type {ProviderEnum}
     * @memberof Provider
     */
    provider: ProviderEnum;
    /**
     *
     * @type {Date}
     * @memberof Provider
     */
    enabledAt?: Date | null;
    /**
     * Standard OAuth client ID. For more information, see: https://www.oauth.com/oauth2-servers/client-registration/client-id-secret/
     * @type {string}
     * @memberof Provider
     */
    clientId?: string;
    /**
     * Standard OAuth client secret key. For more information, see: https://www.oauth.com/oauth2-servers/client-registration/client-id-secret/
     * @type {string}
     * @memberof Provider
     */
    clientSecret?: string;
    /**
     * Some providers require additional information, typically called a project ID or site ID
     * @type {string}
     * @memberof Provider
     */
    providerProjectId?: string;
    /**
     * If the provider supports Oauth 2, this field will contain the URL of the login and authorization where a user can authorize the applciation to gain access to their provider account
     * @type {string}
     * @memberof Provider
     */
    authorizationUrl?: string;
    /**
     * If the provider supports Oauth 2, this field will contain the URL of redirect or callback URL which will need to be provided to the Oauth provider to properly configure your App tp talk with Dynamic
     * @type {string}
     * @memberof Provider
     */
    redirectUrl?: string;
    /**
     * DEPRECATED: Use defaultChain. The default chain id the SDK should use
     * @type {number}
     * @memberof Provider
     */
    defaultChainId?: number;
    /**
     * CAIP-2 Chain ID (https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md)
     * @type {string}
     * @memberof Provider
     */
    defaultChain?: string;
    /**
     * The url of the site to go to export wallets private keys
     * @type {string}
     * @memberof Provider
     */
    keyExportUrl?: string;
    /**
     *
     * @type {ProviderAgreement}
     * @memberof Provider
     */
    termsAcceptedByUser?: ProviderAgreement;
    /**
     * Key ID required for Apple Oauth2 applications. This is the identifier for a private key.
     * @type {string}
     * @memberof Provider
     */
    appleKeyId?: string;
    /**
     * Team ID required for Apple Oauth2 applications. This is associated with the Apple developer membership account.
     * @type {string}
     * @memberof Provider
     */
    appleTeamId?: string;
    /**
     * Required to initialize Twilio provider.
     * @type {string}
     * @memberof Provider
     */
    accountSid?: string;
    /**
     * Required to initialize Twilio provider. Phone number used to send SMS messages.
     * @type {string}
     * @memberof Provider
     */
    twilioNumber?: string;
    /**
     *
     * @type {Array<SmsCountryCode>}
     * @memberof Provider
     */
    enabledCountries?: Array<SmsCountryCode>;
    /**
     *
     * @type {string}
     * @memberof Provider
     */
    entryPointVersion?: ProviderEntryPointVersionEnum;
    /**
     *
     * @type {string}
     * @memberof Provider
     */
    kernelVersion?: ProviderKernelVersionEnum;
    /**
     *
     * @type {EcdsaValidatorOptions}
     * @memberof Provider
     */
    ecdsaProviderType?: EcdsaValidatorOptions;
}
/**
* @export
* @enum {string}
*/
export declare enum ProviderEntryPointVersionEnum {
    V6 = "v6",
    V7 = "v7"
} /**
* @export
* @enum {string}
*/
export declare enum ProviderKernelVersionEnum {
    V24 = "v2_4",
    V30 = "v3_0",
    V31 = "v3_1"
}
export declare function ProviderFromJSON(json: any): Provider;
export declare function ProviderFromJSONTyped(json: any, ignoreDiscriminator: boolean): Provider;
export declare function ProviderToJSON(value?: Provider | null): any;
