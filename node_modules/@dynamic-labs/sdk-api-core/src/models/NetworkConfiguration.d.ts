/**
 * Dashboard API
 * Dashboard API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { NameService } from './NameService';
import { NativeCurrency } from './NativeCurrency';
/**
 *
 * @export
 * @interface NetworkConfiguration
 */
export interface NetworkConfiguration {
    /**
     * A light client, compared to a full node, tracks only pieces of certain information on a blockchain. Light clients do not track the entire state of a blockchain and also do not contain every transaction/block of a chain.
     * @type {string}
     * @memberof NetworkConfiguration
     */
    lcdUrl?: string;
    /**
     * [Deprecated] use `name` property instead
     * @type {string}
     * @memberof NetworkConfiguration
     */
    chainName?: string;
    /**
     *
     * @type {string}
     * @memberof NetworkConfiguration
     */
    name: string;
    /**
     *
     * @type {string}
     * @memberof NetworkConfiguration
     */
    shortName: string;
    /**
     *
     * @type {string}
     * @memberof NetworkConfiguration
     */
    chain: string;
    /**
     *
     * @type {string}
     * @memberof NetworkConfiguration
     */
    chainId: string;
    /**
     *
     * @type {NameService}
     * @memberof NetworkConfiguration
     */
    nameService?: NameService;
    /**
     *
     * @type {string}
     * @memberof NetworkConfiguration
     */
    networkId: string;
    /**
     *
     * @type {Array<string>}
     * @memberof NetworkConfiguration
     */
    iconUrls: Array<string>;
    /**
     *
     * @type {NativeCurrency}
     * @memberof NetworkConfiguration
     */
    nativeCurrency: NativeCurrency;
    /**
     *
     * @type {Array<string>}
     * @memberof NetworkConfiguration
     */
    rpcUrls: Array<string>;
    /**
     * Contains the client private RPC urls
     * @type {Array<string>}
     * @memberof NetworkConfiguration
     */
    privateCustomerRpcUrls?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof NetworkConfiguration
     */
    blockExplorerUrls: Array<string>;
    /**
     *
     * @type {string}
     * @memberof NetworkConfiguration
     */
    vanityName?: string;
}
export declare function NetworkConfigurationFromJSON(json: any): NetworkConfiguration;
export declare function NetworkConfigurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): NetworkConfiguration;
export declare function NetworkConfigurationToJSON(value?: NetworkConfiguration | null): any;
