'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var runtime = require('../runtime.cjs');

/* tslint:disable */
function TokenBalanceFromJSON(json) {
    return TokenBalanceFromJSONTyped(json);
}
function TokenBalanceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'networkId': !runtime.exists(json, 'networkId') ? undefined : json['networkId'],
        'address': json['address'],
        'name': json['name'],
        'symbol': json['symbol'],
        'decimals': json['decimals'],
        'logoURI': json['logoURI'],
        'balance': json['balance'],
        'rawBalance': json['rawBalance'],
        'price': !runtime.exists(json, 'price') ? undefined : json['price'],
        'marketValue': !runtime.exists(json, 'marketValue') ? undefined : json['marketValue'],
    };
}
function TokenBalanceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'networkId': value.networkId,
        'address': value.address,
        'name': value.name,
        'symbol': value.symbol,
        'decimals': value.decimals,
        'logoURI': value.logoURI,
        'balance': value.balance,
        'rawBalance': value.rawBalance,
        'price': value.price,
        'marketValue': value.marketValue,
    };
}

exports.TokenBalanceFromJSON = TokenBalanceFromJSON;
exports.TokenBalanceFromJSONTyped = TokenBalanceFromJSONTyped;
exports.TokenBalanceToJSON = TokenBalanceToJSON;
