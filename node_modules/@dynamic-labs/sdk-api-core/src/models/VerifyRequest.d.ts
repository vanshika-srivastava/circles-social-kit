/**
 * Dashboard API
 * Dashboard API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ChainEnum } from './ChainEnum';
import { OauthProviderRequest } from './OauthProviderRequest';
import { PasswordSourceTypeEnum } from './PasswordSourceTypeEnum';
import { WalletAdditionalAddress } from './WalletAdditionalAddress';
import { WalletProviderEnum } from './WalletProviderEnum';
/**
 *
 * @export
 * @interface VerifyRequest
 */
export interface VerifyRequest {
    /**
     *
     * @type {OauthProviderRequest}
     * @memberof VerifyRequest
     */
    oauth?: OauthProviderRequest;
    /**
     *
     * @type {string}
     * @memberof VerifyRequest
     */
    signedMessage: string;
    /**
     *
     * @type {string}
     * @memberof VerifyRequest
     */
    messageToSign: string;
    /**
     *
     * @type {string}
     * @memberof VerifyRequest
     */
    publicWalletAddress: string;
    /**
     *
     * @type {ChainEnum}
     * @memberof VerifyRequest
     */
    chain: ChainEnum;
    /**
     *
     * @type {string}
     * @memberof VerifyRequest
     */
    walletName: string;
    /**
     *
     * @type {WalletProviderEnum}
     * @memberof VerifyRequest
     */
    walletProvider: WalletProviderEnum;
    /**
     * Used for wallet transfers. When set to true it will execute the transfer even if the wallet is the only one that the transferor has.Be warn that this will result an orphan account that will be impossible to access.
     * @type {boolean}
     * @memberof VerifyRequest
     */
    skipEmptyAccountCheck?: boolean;
    /**
     * When provided, used to verify that a captcha is valid and get the success/failure result from the captcha provider server-side.
     * @type {string}
     * @memberof VerifyRequest
     */
    captchaToken?: string;
    /**
     *
     * @type {string}
     * @memberof VerifyRequest
     */
    network?: string;
    /**
     * Additional addresses associated with the wallet.
     * @type {Array<WalletAdditionalAddress>}
     * @memberof VerifyRequest
     */
    additionalWalletAddresses?: Array<WalletAdditionalAddress>;
    /**
     *
     * @type {string}
     * @memberof VerifyRequest
     */
    backup?: string;
    /**
     *
     * @type {string}
     * @memberof VerifyRequest
     */
    password?: string;
    /**
     *
     * @type {PasswordSourceTypeEnum}
     * @memberof VerifyRequest
     */
    passwordSource?: PasswordSourceTypeEnum;
    /**
     *
     * @type {string}
     * @memberof VerifyRequest
     */
    sessionPublicKey?: string;
}
export declare function VerifyRequestFromJSON(json: any): VerifyRequest;
export declare function VerifyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): VerifyRequest;
export declare function VerifyRequestToJSON(value?: VerifyRequest | null): any;
