/**
 * Generic type for a transaction to navigate through the different chains
 * for sending transaction with dynamic's UI
 */
export interface IUITransaction {
    to: string | undefined;
    from: string;
    value: bigint | undefined;
    nonNativeValue?: bigint;
    nonNativeAddress?: string;
    nonNativeDecimal?: number;
    chain: string;
    data: string | undefined;
    nativePrice?: number;
    fee: {
        gas: bigint | undefined;
    };
    parse: (input: string) => bigint;
    parseNonNativeToken?: (input: string, decimals: number) => bigint;
    format: (value: bigint, options?: IUITransactionFormatOptions) => string;
    formatNonNativeToken?: (value: bigint, decimals: number) => string;
    receipt: string | undefined;
    submit: () => Promise<string>;
    getBalance: () => Promise<bigint>;
    fetchFee: () => Promise<void>;
    validateAddressFormat: (address: string) => boolean;
}
export interface IUITransactionFormatOptions {
    precision?: number;
}
export type TransactionReceipt<status = 'success' | 'reverted'> = {
    /** `success` if this transaction was successful or `reverted` if it failed */
    status: status;
};
