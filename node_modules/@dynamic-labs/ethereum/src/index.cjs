'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('./polyfills.cjs');
var embeddedWalletEvm = require('@dynamic-labs/embedded-wallet-evm');
var PhantomEvm = require('./injected/PhantomEvm.cjs');
var ExodusEvm = require('./injected/ExodusEvm.cjs');
var UnknownInjected = require('./injected/UnknownInjected.cjs');
var FallbackEvmConnector = require('./injected/FallbackEvmConnector.cjs');
var fetchInjectedWalletConnectors = require('./injected/fetchInjectedWalletConnectors.cjs');
require('./walletConnect/walletConnect.cjs');
var fetchWalletConnectWallets = require('./walletConnect/fetchWalletConnectWallets.cjs');
var coinbase = require('./coinbase/coinbase.cjs');
var ethereumCore = require('@dynamic-labs/ethereum-core');
var ethProviderHelper = require('./ethProviderHelper.cjs');
var constants = require('./constants.cjs');

const EthereumWalletConnectors = (props) => [
    ...fetchInjectedWalletConnectors.injectedWalletOverrides,
    ...fetchInjectedWalletConnectors.fetchInjectedWalletConnector(props),
    ...fetchWalletConnectWallets.fetchWalletConnectWallets(props),
    ...embeddedWalletEvm.TurnkeyEVMWalletConnectors(props),
    coinbase.Coinbase,
    UnknownInjected.UnknownInjected,
    FallbackEvmConnector.FallbackEvmConnector,
    fetchWalletConnectWallets.getWalletConnectConnector(),
];

exports.PhantomEvm = PhantomEvm.PhantomEvm;
exports.ExodusEvm = ExodusEvm.ExodusEvm;
exports.UnknownInjected = UnknownInjected.UnknownInjected;
exports.FallbackEvmConnector = FallbackEvmConnector.FallbackEvmConnector;
exports.fetchInjectedWalletConnector = fetchInjectedWalletConnectors.fetchInjectedWalletConnector;
exports.injectedWalletOverrides = fetchInjectedWalletConnectors.injectedWalletOverrides;
Object.defineProperty(exports, 'isEthereumWallet', {
  enumerable: true,
  get: function () { return ethereumCore.isEthereumWallet; }
});
exports.EthProviderHelper = ethProviderHelper.EthProviderHelper;
exports.INFURA_ID = constants.INFURA_ID;
exports.EthereumWalletConnectors = EthereumWalletConnectors;
