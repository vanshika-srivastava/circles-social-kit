'use client'
import './polyfills.js';
import { TurnkeyEVMWalletConnectors } from '@dynamic-labs/embedded-wallet-evm';
export { PhantomEvm } from './injected/PhantomEvm.js';
export { ExodusEvm } from './injected/ExodusEvm.js';
import { UnknownInjected } from './injected/UnknownInjected.js';
export { UnknownInjected } from './injected/UnknownInjected.js';
import { FallbackEvmConnector } from './injected/FallbackEvmConnector.js';
export { FallbackEvmConnector } from './injected/FallbackEvmConnector.js';
import { injectedWalletOverrides, fetchInjectedWalletConnector } from './injected/fetchInjectedWalletConnectors.js';
export { fetchInjectedWalletConnector, injectedWalletOverrides } from './injected/fetchInjectedWalletConnectors.js';
import './walletConnect/walletConnect.js';
import { fetchWalletConnectWallets, getWalletConnectConnector } from './walletConnect/fetchWalletConnectWallets.js';
import { Coinbase } from './coinbase/coinbase.js';
export { isEthereumWallet } from '@dynamic-labs/ethereum-core';
export { EthProviderHelper } from './ethProviderHelper.js';
export { INFURA_ID } from './constants.js';

const EthereumWalletConnectors = (props) => [
    ...injectedWalletOverrides,
    ...fetchInjectedWalletConnector(props),
    ...fetchWalletConnectWallets(props),
    ...TurnkeyEVMWalletConnectors(props),
    Coinbase,
    UnknownInjected,
    FallbackEvmConnector,
    getWalletConnectConnector(),
];

export { EthereumWalletConnectors };
