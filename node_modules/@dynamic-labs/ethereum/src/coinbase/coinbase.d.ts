import { WalletClient, Account, Transport, Chain as ViemChain } from 'viem';
import { ProviderInterface } from '@coinbase/wallet-sdk';
import { EthWalletConnector } from '@dynamic-labs/ethereum-core';
import { Chain } from '@dynamic-labs/wallet-connector-core';
import { CoinbaseOpts, GetCoinbaseProviderOpts } from './types';
export declare class Coinbase extends EthWalletConnector {
    name: string;
    overrideKey: string;
    supportedChains: Chain[];
    connectedChain: Chain;
    canConnectViaQrCode: boolean;
    coinbaseProviderOpts: GetCoinbaseProviderOpts;
    constructor({ appName, appLogoUrl, evmNetworks, coinbaseWalletPreference, ...props }: CoinbaseOpts);
    get coinbaseProvider(): ProviderInterface;
    getConnectedAccounts(): Promise<string[]>;
    isInstalledOnBrowser(): boolean;
    canConnectViaCustodialService: boolean;
    getAddress(): Promise<string | undefined>;
    signMessage(messageToSign: string): Promise<string | undefined>;
    setupEventListeners(): void;
    getWalletClient(chainId?: string): WalletClient<Transport, ViemChain, Account> | undefined;
}
