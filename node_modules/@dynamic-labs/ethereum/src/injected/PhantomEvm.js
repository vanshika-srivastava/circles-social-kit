'use client'
import { __awaiter } from '../../_virtual/_tslib.js';
import { isMobile, handleMobileWalletRedirect } from '@dynamic-labs/utils';
import { findWalletBookWallet } from '@dynamic-labs/wallet-book';
import InjectedWalletBase from './InjectedWalletBase.js';

class PhantomEvm extends InjectedWalletBase {
    constructor(props) {
        super(props);
        this.name = 'Phantom';
        this.overrideKey = 'phantomevm';
        this.wallet = findWalletBookWallet(this.walletBook, this.key);
    }
    getAddress() {
        const _super = Object.create(null, {
            getAddress: { get: () => super.getAddress }
        });
        return __awaiter(this, void 0, void 0, function* () {
            if (this.isInstalledOnBrowser()) {
                return _super.getAddress.call(this);
            }
            if (isMobile()) {
                handleMobileWalletRedirect({
                    nativeLink: 'phantom://browse',
                    universalLink: 'https://phantom.app/ul/browse',
                });
            }
            return undefined;
        });
    }
    canGetChainAddress() {
        var _a, _b;
        return Boolean((_b = (_a = this.getEthProviderHelper()) === null || _a === void 0 ? void 0 : _a.findProvider()) === null || _b === void 0 ? void 0 : _b.selectedAddress);
    }
}

export { PhantomEvm };
