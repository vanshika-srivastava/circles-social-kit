'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var viem = require('viem');
var interceptTransport = require('../interceptTransport/interceptTransport.cjs');
var ViemRpcUiTransaction = require('../ViemRpcUiTransaction/ViemRpcUiTransaction.cjs');

const confirmationTransport = ({ transport, walletUiUtils, getAccounts, onPersonalSign, onSendTransaction, onSignTypedData, walletConnector, provider, }) => interceptTransport.interceptTransport({
    getAccounts,
    onPersonalSign: onPersonalSign
        ? (args) => walletUiUtils.signMessage({
            handler: () => onPersonalSign(args),
            message: viem.fromHex(args.message, 'string'),
            walletConnector,
        })
        : undefined,
    onSendTransaction: onSendTransaction
        ? (args) => {
            const uiTransaction = new ViemRpcUiTransaction.ViemRpcUiTransaction({
                onSubmit: (transaction) => onSendTransaction(Object.assign(Object.assign({}, args), { transaction })),
                publicClient: provider,
                transaction: args.transaction,
            });
            return walletUiUtils.sendTransaction(walletConnector, uiTransaction);
        }
        : undefined,
    onSignTypedData: onSignTypedData
        ? (args) => walletUiUtils.signMessage({
            handler: () => onSignTypedData(args),
            message: args.message,
            walletConnector,
        })
        : undefined,
    transport,
});

exports.confirmationTransport = confirmationTransport;
