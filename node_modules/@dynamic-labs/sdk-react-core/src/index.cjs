'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('./polyfills.cjs');
var version = require('./version.cjs');
var data = require('./lib/views/WalletList/data.cjs');
var getAuthToken = require('./lib/utils/functions/getAuthToken/getAuthToken.cjs');
var DynamicContext = require('./lib/context/DynamicContext/DynamicContext.cjs');
var ErrorBoundary = require('./lib/context/ErrorBoundary/ErrorBoundary.cjs');
var ErrorBoundaryExclude = require('./lib/context/ErrorBoundary/ErrorBoundaryExclude.cjs');
var ErrorBoundaryInclude = require('./lib/context/ErrorBoundary/ErrorBoundaryInclude.cjs');
var useDynamicContext = require('./lib/context/DynamicContext/useDynamicContext/useDynamicContext.cjs');
require('react');
var useDynamicScopes = require('./lib/utils/hooks/useDynamicScopes/useDynamicScopes.cjs');
var UserWalletsContext = require('./lib/context/UserWalletsContext/UserWalletsContext.cjs');
require('react/jsx-runtime');
var classNames = require('./lib/utils/functions/classNames/classNames.cjs');
require('./lib/components/Accordion/components/AccordionItem/AccordionItem.cjs');
require('./lib/components/Alert/Alert.cjs');
var useDynamicEvents = require('./lib/utils/hooks/events/useDynamicEvents/useDynamicEvents.cjs');
var useWalletConnectorEvent = require('./lib/utils/hooks/events/useWalletConnectorEvent/useWalletConnectorEvent.cjs');
var useAuthenticateConnectedUser = require('./lib/utils/hooks/useAuthenticateConnectedUser/useAuthenticateConnectedUser.cjs');
var sdkApiCore = require('@dynamic-labs/sdk-api-core');
require('./lib/shared/logger.cjs');
var getChainIcon = require('./lib/shared/utils/functions/chain/getChainIcon.cjs');
var getChainDisplayName = require('./lib/shared/utils/functions/chain/getChainDisplayName.cjs');
var createWallet = require('./lib/shared/utils/functions/wallet/createWallet.cjs');
var index = require('./lib/shared/utils/functions/getValueByKey/index.cjs');
require('@dynamic-labs/utils');
require('./lib/utils/constants/colors.cjs');
require('./lib/utils/constants/values.cjs');
require('@dynamic-labs/wallet-connector-core');
require('./lib/store/state/loadingAndLifecycle.cjs');
var useLocalStorage = require('./lib/shared/utils/hooks/useLocalStorage/useLocalStorage.cjs');
var index$1 = require('./lib/shared/utils/hooks/useOnClickOutside/index.cjs');
require('@dynamic-labs/iconic');
require('./lib/context/ViewContext/ViewContext.cjs');
var arrowLeft = require('./lib/shared/assets/arrow-left.cjs');
var arrowRight = require('./lib/shared/assets/arrow-right.cjs');
var checkCircle = require('./lib/shared/assets/check-circle.cjs');
var check = require('./lib/shared/assets/check.cjs');
var chevronLeft = require('./lib/shared/assets/chevron-left.cjs');
var close = require('./lib/shared/assets/close.cjs');
var copy = require('./lib/shared/assets/copy.cjs');
var embeddedWalletIcon = require('./lib/shared/assets/embedded-wallet-icon.cjs');
var error = require('./lib/shared/assets/error.cjs');
var externalLink = require('./lib/shared/assets/externalLink.cjs');
var footerEyeIcon = require('./lib/shared/assets/footer-eye-icon.cjs');
var footerInfoIcon = require('./lib/shared/assets/footer-info-icon.cjs');
var iphoneFaceId = require('./lib/shared/assets/iphone-face-id.cjs');
var iphoneTouchId = require('./lib/shared/assets/iphone-touch-id.cjs');
var logout = require('./lib/shared/assets/logout.cjs');
var pencil = require('./lib/shared/assets/pencil.cjs');
var spinner = require('./lib/shared/assets/spinner.cjs');
var stroke = require('./lib/shared/assets/stroke.cjs');
require('./lib/shared/consts/index.cjs');
require('../_virtual/_tslib.cjs');
require('react-dom');
require('./lib/events/dynamicEvents.cjs');
var api = require('./lib/data/api/api.cjs');
require('@dynamic-labs/multi-wallet');
require('react-international-phone');
var mergeNetworks = require('./lib/utils/functions/mergeNetworks/mergeNetworks.cjs');
require('./lib/store/state/projectSettings/projectSettings.cjs');
var isAuthenticatedWithAWallet = require('./lib/utils/functions/isAuthenticatedWithAWallet/isAuthenticatedWithAWallet.cjs');
require('./lib/store/state/user/user.cjs');
require('./lib/locale/locale.cjs');
var useEmbeddedWallet = require('./lib/utils/hooks/useEmbeddedWallet/useEmbeddedWallet.cjs');
require('./lib/context/WalletContext/WalletContext.cjs');
var useSmartWallets = require('./lib/utils/hooks/useSmartWallets/useSmartWallets.cjs');
var usePasskeyRecovery = require('./lib/utils/hooks/usePasskeyRecovery/usePasskeyRecovery.cjs');
var constants = require('./lib/utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.cjs');
require('./lib/context/ErrorContext/ErrorContext.cjs');
require('./lib/context/ThemeContext/ThemeContext.cjs');
var useIsLoggedIn = require('./lib/utils/hooks/useIsLoggedIn/useIsLoggedIn.cjs');
require('./lib/context/VerificationContext/VerificationContext.cjs');
var useOtpVerificationRequest = require('./lib/utils/hooks/authenticationHooks/useOtpVerificationRequest/useOtpVerificationRequest.cjs');
require('./lib/utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.cjs');
var useSocialAccounts = require('./lib/utils/hooks/useSocialAccounts/useSocialAccounts.cjs');
require('yup');
var MockContext = require('./lib/context/MockContext/MockContext.cjs');
require('./lib/views/CollectUserDataView/useFields.cjs');
var useUserUpdateRequest = require('./lib/utils/hooks/useUserUpdateRequest/useUserUpdateRequest.cjs');
require('./lib/context/UserFieldEditorContext/UserFieldEditorContext.cjs');
require('./lib/context/FieldsStateContext/FieldsStateContext.cjs');
var useRpcProviders = require('./lib/utils/hooks/useRpcProviders/useRpcProviders.cjs');
require('./lib/store/state/environmentId.cjs');
require('./lib/context/AccessDeniedContext/AccessDeniedContext.cjs');
require('./lib/context/AccountExistsContext/AccountExistsContext.cjs');
require('./lib/store/state/walletConnectorOptions.cjs');
var useWalletItemActions = require('./lib/utils/hooks/useWalletItemActions/useWalletItemActions.cjs');
require('react-i18next');
require('./lib/context/FooterAnimationContext/index.cjs');
var ShadowDOM = require('./lib/components/ShadowDOM/ShadowDOM.cjs');
require('./lib/components/Transition/ZoomTransition/ZoomTransition.cjs');
require('./lib/components/Transition/SlideInUpTransition/SlideInUpTransition.cjs');
require('./lib/components/Transition/OpacityTransition/OpacityTransition.cjs');
require('./lib/components/OverlayCard/OverlayCardTarget/OverlayCardTarget.cjs');
require('./lib/context/SocialRedirectContext/SocialRedirectContext.cjs');
require('@dynamic-labs/wallet-book');
require('./lib/context/WalletGroupContext/WalletGroupContext.cjs');
require('./lib/widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.cjs');
require('react-focus-lock');
require('./lib/context/LoadingContext/LoadingContext.cjs');
var useMultiWalletPromptState = require('./lib/widgets/DynamicWidget/hooks/useMultiWalletPromptState/useMultiWalletPromptState.cjs');
require('./lib/context/CaptchaContext/CaptchaContext.cjs');
var DynamicWidgetContext = require('./lib/widgets/DynamicWidget/context/DynamicWidgetContext.cjs');
require('./lib/components/IconButton/IconButton.cjs');
require('./lib/components/MenuList/Dropdown/Dropdown.cjs');
var useSwitchWallet = require('./lib/utils/hooks/useSwitchWallet/useSwitchWallet.cjs');
require('formik');
require('./lib/store/state/sendBalances.cjs');
require('./lib/components/Input/Input.cjs');
require('./lib/views/TransactionConfirmationView/helpers/transactionErrorMessage.cjs');
require('./lib/context/PasskeyContext/PasskeyContext.cjs');
require('./lib/widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.cjs');
var useEmbeddedReveal = require('./lib/utils/hooks/useEmbeddedReveal/useEmbeddedReveal.cjs');
var useEmbeddedWalletAuthenticator = require('./lib/utils/hooks/useEmbeddedWalletAuthenticator/useEmbeddedWalletAuthenticator.cjs');
var DynamicBridgeWidget = require('./lib/widgets/DynamicBridgeWidget/DynamicBridgeWidget.cjs');
var DynamicEmbeddedAuthFlow = require('./lib/widgets/DynamicEmbeddedWidget/DynamicEmbeddedAuthFlow/DynamicEmbeddedAuthFlow.cjs');
var DynamicEmbeddedUserProfile = require('./lib/widgets/DynamicEmbeddedWidget/DynamicEmbeddedUserProfile/DynamicEmbeddedUserProfile.cjs');
var DynamicEmbeddedWidget = require('./lib/widgets/DynamicEmbeddedWidget/DynamicEmbeddedWidget.cjs');
var DynamicWidget = require('./lib/widgets/DynamicWidget/DynamicWidget.cjs');
var DynamicNav = require('./lib/widgets/DynamicWidget/components/DynamicNav/DynamicNav.cjs');
var DynamicUserProfile = require('./lib/widgets/DynamicWidget/components/DynamicUserProfile/DynamicUserProfile.cjs');
var FundingWidget = require('./lib/widgets/FundingWidget/FundingWidget.cjs');
var DynamicMultiWalletPromptsWidget = require('./lib/widgets/DynamicMultiWalletPromptsWidget/DynamicMultiWalletPromptsWidget.cjs');
var NoQrNotInstalledView = require('./lib/views/NoQrNotInstalledView/NoQrNotInstalledView.cjs');
var CollectUserDataView = require('./lib/views/CollectUserDataView/CollectUserDataView.cjs');
var EmailConfirmationWaitingView = require('./lib/views/EmailConfirmationWaitingView/EmailConfirmationWaitingView.cjs');
var NoAccess = require('./lib/views/NoAccess/NoAccess.cjs');
var PendingSignatureView = require('./lib/views/PendingSignatureView/PendingSignatureView.cjs');
var QrCodeView = require('./lib/views/QrCodeView/QrCodeView.cjs');
var WalletList = require('./lib/views/WalletList/WalletList.cjs');
var FarcasterConnectView = require('./lib/views/FarcasterConnectView/FarcasterConnectView.cjs');
var NetworkNotSupportedSwitchManual = require('./lib/views/NetworkNotSupportedSwitchManual/NetworkNotSupportedSwitchManual.cjs');
var viewToComponentMap = require('./lib/views/viewToComponentMap.cjs');
var themesData = require('./lib/context/ThemeContext/themesData.cjs');
var getNetwork = require('./lib/utils/functions/getNetwork/getNetwork.cjs');
var index$2 = require('./lib/utils/functions/walletFilters/index.cjs');
var SendBalanceContext = require('./lib/context/SendBalanceContext/SendBalanceContext.cjs');
require('./lib/context/FundingContext/FundingContext.cjs');
var useFunding = require('./lib/context/FundingContext/useFunding/useFunding.cjs');
require('./lib/context/ConnectWithOtpContext/ConnectWithOtpContext.cjs');
require('./lib/context/ConnectWithOtpContext/constants.cjs');
var useConnectWithOtp = require('./lib/context/ConnectWithOtpContext/useConnectWithOtp.cjs');
var useSwitchNetwork = require('./lib/utils/hooks/useSwitchNetwork/useSwitchNetwork.cjs');
var ReinitializeContextProvider = require('./lib/context/ReinitializeContext/ReinitializeContextProvider.cjs');
var useExternalAuth = require('./lib/utils/hooks/useExternalAuth/useExternalAuth.cjs');
var useSyncMfaFlow = require('./lib/utils/hooks/useSyncMfaFlow/useSyncMfaFlow.cjs');
var useDynamicModals = require('./lib/utils/hooks/useDynamicModals/useDynamicModals.cjs');
var useMfa = require('./lib/utils/hooks/useMfa/useMfa.cjs');
var useTokenBalances = require('./lib/utils/hooks/useTokenBalances/useTokenBalances.cjs');
var useRefreshUser = require('./lib/utils/hooks/useRefreshUser/useRefreshUser.cjs');
var useWalletOptions = require('./lib/utils/hooks/useWalletOptions/useWalletOptions.cjs');
var useTelegramLogin = require('./lib/utils/hooks/useTelegramLogin/useTelegramLogin.cjs');
var DynamicConnectButton = require('./lib/components/DynamicConnectButton/DynamicConnectButton.cjs');
require('./lib/components/InlineWidget/InlineWidget.cjs');
var IsBrowser = require('./lib/components/IsBrowser/IsBrowser.cjs');
require('./lib/components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.cjs');
require('./lib/components/Popper/Popper/Popper.cjs');
require('./lib/components/Popper/PopperContext/PopperContext.cjs');
require('qrcode');



exports.VERSION = version.VERSION;
exports.getWallets = data.getWallets;
exports.getAuthToken = getAuthToken.getAuthToken;
exports.DynamicContext = DynamicContext.DynamicContext;
exports.DynamicContextProvider = DynamicContext.DynamicContextProvider;
exports.ErrorBoundary = ErrorBoundary.ErrorBoundary;
exports.ErrorBoundaryExclude = ErrorBoundaryExclude.ErrorBoundaryExclude;
exports.ErrorBoundaryInclude = ErrorBoundaryInclude.ErrorBoundaryInclude;
exports.useDynamicContext = useDynamicContext.useDynamicContext;
exports.useDynamicScopes = useDynamicScopes.useDynamicScopes;
exports.useUserWallets = UserWalletsContext.useUserWallets;
exports.classNames = classNames.classNames;
exports.useDynamicEvents = useDynamicEvents.useDynamicEvents;
exports.useWalletConnectorEvent = useWalletConnectorEvent.useWalletConnectorEvent;
exports.useAuthenticateConnectedUser = useAuthenticateConnectedUser.useAuthenticateConnectedUser;
Object.defineProperty(exports, 'DynamicJwtFromJSON', {
  enumerable: true,
  get: function () { return sdkApiCore.DynamicJwtFromJSON; }
});
exports.getChainIcon = getChainIcon.getChainIcon;
exports.getChainDisplayName = getChainDisplayName.getChainDisplayName;
exports.createWallet = createWallet.createWallet;
exports.getValueByKey = index.getValueByKey;
exports.useLocalStorage = useLocalStorage.useLocalStorage;
exports.useOnClickOutside = index$1.useOnClickOutside;
exports.ArrowLeftIcon = arrowLeft.ReactComponent;
exports.ArrowRightIcon = arrowRight.ReactComponent;
exports.CheckCircleIcon = checkCircle.ReactComponent;
exports.CheckIcon = check.ReactComponent;
exports.ChevronLeftIcon = chevronLeft.ReactComponent;
exports.CloseIcon = close.ReactComponent;
exports.CopyIcon = copy.ReactComponent;
exports.EmbeddedWalletIcon = embeddedWalletIcon.ReactComponent;
exports.ErrorIcon = error.ReactComponent;
exports.ExternalLinkIcon = externalLink.ReactComponent;
exports.EyeIcon = footerEyeIcon.ReactComponent;
exports.InfoIcon = footerInfoIcon.ReactComponent;
exports.IPhoneFaceId = iphoneFaceId.ReactComponent;
exports.IPhoneTouchId = iphoneTouchId.ReactComponent;
exports.LogoutIcon = logout.ReactComponent;
exports.PencilIcon = pencil.ReactComponent;
exports.SpinnerIcon = spinner.ReactComponent;
exports.ArrowIcon = stroke.ReactComponent;
exports.apiClient = api.sdkApi;
exports.mergeNetworks = mergeNetworks.mergeNetworks;
exports.isAuthenticatedWithAWallet = isAuthenticatedWithAWallet.isAuthenticatedWithAWallet;
exports.useEmbeddedWallet = useEmbeddedWallet.useEmbeddedWallet;
exports.useSmartWallets = useSmartWallets.useSmartWallets;
exports.usePasskeyRecovery = usePasskeyRecovery.usePasskeyRecovery;
Object.defineProperty(exports, 'EmbeddedWalletVersion', {
  enumerable: true,
  get: function () { return constants.EmbeddedWalletVersion; }
});
exports.useIsLoggedIn = useIsLoggedIn.useIsLoggedIn;
exports.useOtpVerificationRequest = useOtpVerificationRequest.useOtpVerificationRequest;
exports.useSocialAccounts = useSocialAccounts.useSocialAccounts;
exports.MockContextProvider = MockContext.MockContextProvider;
exports.useUserUpdateRequest = useUserUpdateRequest.useUserUpdateRequest;
exports.useRpcProviders = useRpcProviders.useRpcProviders;
exports.useWalletItemActions = useWalletItemActions.useWalletItemActions;
exports.ShadowDOM = ShadowDOM.ShadowDOM;
exports.useMultiWalletPromptState = useMultiWalletPromptState.useMultiWalletPromptState;
exports.DynamicWidgetContextProvider = DynamicWidgetContext.DynamicWidgetContextProvider;
exports.useSwitchWallet = useSwitchWallet.useSwitchWallet;
exports.useEmbeddedReveal = useEmbeddedReveal.useEmbeddedReveal;
exports.useEmbeddedWalletAuthenticator = useEmbeddedWalletAuthenticator.useEmbeddedWalletAuthenticator;
exports.DynamicBridgeWidget = DynamicBridgeWidget.DynamicBridgeWidget;
exports.DynamicEmbeddedAuthFlow = DynamicEmbeddedAuthFlow.DynamicEmbeddedAuthFlow;
exports.DynamicEmbeddedUserProfile = DynamicEmbeddedUserProfile.DynamicEmbeddedUserProfile;
exports.DynamicEmbeddedWidget = DynamicEmbeddedWidget.DynamicEmbeddedWidget;
exports.DynamicWidget = DynamicWidget.DynamicWidget;
exports.DynamicNav = DynamicNav.ShadowedDynamicNav;
exports.DynamicUserProfile = DynamicUserProfile.ShadowedDynamicUserProfile;
exports.FundingWidget = FundingWidget.FundingWidget;
exports.DynamicMultiWalletPromptsWidget = DynamicMultiWalletPromptsWidget.DynamicMultiWalletPromptsWidget;
exports.NoQrNotInstalledView = NoQrNotInstalledView.NoQrNotInstalledView;
exports.CollectUserDataView = CollectUserDataView.CollectUserDataView;
exports.EmailConfirmationWaitingView = EmailConfirmationWaitingView.EmailConfirmationWaitingView;
exports.NoAccess = NoAccess.NoAccess;
exports.PendingSignatureView = PendingSignatureView.PendingSignatureView;
exports.QrCodeView = QrCodeView.QrCodeView;
exports.WalletList = WalletList.WalletList;
exports.FarcasterConnectView = FarcasterConnectView.FarcasterConnectView;
exports.NetworkNotSupportedSwitchManual = NetworkNotSupportedSwitchManual.NetworkNotSupportedSwitchManual;
exports.viewToComponentMap = viewToComponentMap.viewToComponentMap;
exports.getDefaultColor = themesData.getDefaultColor;
exports.getThemeConfig = themesData.getThemeConfig;
exports.themesData = themesData.themesData;
exports.getNetwork = getNetwork.getNetwork;
exports.FilterAndSortWallets = index$2.FilterAndSortWallets;
exports.FilterBridgeChainsName = index$2.FilterBridgeChainsName;
exports.FilterChain = index$2.FilterChain;
exports.FilterWallets = index$2.FilterWallets;
exports.RemoveWallets = index$2.RemoveWallets;
exports.SortWallets = index$2.SortWallets;
exports.UniswapFilter = index$2.UniswapFilter;
exports.useSendBalance = SendBalanceContext.useSendBalance;
exports.useFunding = useFunding.useFunding;
exports.useConnectWithOtp = useConnectWithOtp.useConnectWithOtp;
exports.useSwitchNetwork = useSwitchNetwork.useSwitchNetwork;
exports.useReinitialize = ReinitializeContextProvider.useReinitialize;
exports.useExternalAuth = useExternalAuth.useExternalAuth;
exports.useSyncMfaFlow = useSyncMfaFlow.useSyncMfaFlow;
exports.useDynamicModals = useDynamicModals.useDynamicModals;
exports.useMfa = useMfa.useMfa;
exports.useTokenBalances = useTokenBalances.useTokenBalances;
exports.useRefreshUser = useRefreshUser.useRefreshUser;
exports.useWalletOptions = useWalletOptions.useWalletOptions;
exports.useTelegramLogin = useTelegramLogin.useTelegramLogin;
exports.DynamicConnectButton = DynamicConnectButton.DynamicConnectButton;
exports.IsBrowser = IsBrowser.IsBrowser;
