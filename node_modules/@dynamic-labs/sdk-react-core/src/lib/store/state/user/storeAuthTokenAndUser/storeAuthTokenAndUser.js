'use client'
import '../../../../utils/constants/colors.js';
import { DYNAMIC_AUTH_COOKIE_NAME } from '../../../../utils/constants/values.js';
import { createUserProfileFromSdkUser } from '../../../../utils/functions/createUserProfile/createUserProfile.js';
import '@dynamic-labs/sdk-api-core';
import '@dynamic-labs/utils';
import '../../../../../../_virtual/_tslib.js';
import '@dynamic-labs/multi-wallet';
import '../../../../shared/logger.js';
import 'react-international-phone';
import '@dynamic-labs/iconic';
import '@dynamic-labs/wallet-connector-core';
import 'react/jsx-runtime';
import '../../../../context/ViewContext/ViewContext.js';
import 'react';
import '@dynamic-labs/wallet-book';
import '../../loadingAndLifecycle.js';
import '../../../../shared/consts/index.js';
import { storeAuthToken } from '../../../../utils/functions/storeAuthToken/index.js';
import '../../../../config/ApiEndpoint.js';
import { storeExpiresAt } from '../../../../utils/functions/storeExpiresAt/storeExpiresAt.js';
import { setUser } from '../user.js';
import '../../../../locale/locale.js';
import { isCookieEnabled } from '../../../../utils/functions/isCookieEnabled/isCookieEnabled.js';

const storeAuthTokenAndUser = ({ user, jwt, minifiedJwt, expiresAt, }) => {
    // expiresAt is always sent back by the backend, regardless of whether jwt/minifiedJwt are sent or not
    storeExpiresAt(expiresAt);
    if (jwt && minifiedJwt) {
        storeAuthToken(jwt, minifiedJwt);
        if (isCookieEnabled()) {
            // if cookie is enabled, but the backend returns a JWT, then use JS to store the cookie
            const expireDate = new Date(expiresAt * 1000).toUTCString();
            const authCookie = `${DYNAMIC_AUTH_COOKIE_NAME}=${minifiedJwt}; expires=${expireDate}; path=/; SameSite=Lax`;
            document.cookie = authCookie;
        }
    }
    const userProfile = createUserProfileFromSdkUser(user);
    setUser(userProfile);
    return userProfile;
};

export { storeAuthTokenAndUser };
