'use client'
/**
 * Returns the initial state for the SdkStore
 */
const createInitialStates = ({ environmentId, }) => ({
    environmentId,
    loadingAndLifecycle: {
        sessionValidation: false,
    },
    networkConfigurations: {
        expiresAt: undefined,
        networkConfigurations: undefined,
    },
    projectSettings: { expiresAt: undefined, settings: undefined },
    sendBalanceState: {
        amount: undefined,
        chainName: undefined,
        nativePrice: undefined,
    },
    tokenBalancesState: {
        error: undefined,
        isError: false,
        isLoading: false,
        tokenBalances: undefined,
    },
    user: undefined,
    walletConnectorOptions: [],
});
/**
 * Filters out which variables should be stored to local storage.
 * Also allows transforming them before storage.
 */
const transformStateForLocalStorage = (state) => ({
    environmentId: state.environmentId,
    networkConfigurations: state.networkConfigurations,
    projectSettings: state.projectSettings,
    user: state.user,
});

export { createInitialStates, transformStateForLocalStorage };
