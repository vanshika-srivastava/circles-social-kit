'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var reactI18next = require('react-i18next');
var walletBook = require('@dynamic-labs/wallet-book');
var DefaultPromptModal = require('../../../widgets/DynamicWidget/prompts/DefaultPromptModal/DefaultPromptModal.cjs');
require('@dynamic-labs/sdk-api-core');
require('../../../shared/logger.cjs');
require('@dynamic-labs/iconic');
require('@dynamic-labs/wallet-connector-core');
require('../../../context/ViewContext/ViewContext.cjs');
require('react');
var arrowCircleRight = require('../../../shared/assets/arrow-circle-right.cjs');
var shortenWalletAddress = require('../../../shared/utils/functions/shortenWalletAddress/shortenWalletAddress.cjs');
require('@dynamic-labs/utils');
require('../../../utils/constants/colors.cjs');
require('../../../utils/constants/values.cjs');
require('../../../store/state/loadingAndLifecycle.cjs');
require('../../../shared/consts/index.cjs');
require('../../../components/Accordion/components/AccordionItem/AccordionItem.cjs');
require('../../../components/Alert/Alert.cjs');
require('../../../events/dynamicEvents.cjs');
require('../../../../../_virtual/_tslib.cjs');
require('../../../context/DynamicContext/DynamicContext.cjs');
require('../../../context/CaptchaContext/CaptchaContext.cjs');
require('../../../context/ErrorContext/ErrorContext.cjs');
require('@dynamic-labs/multi-wallet');
require('react-international-phone');
require('../../../config/ApiEndpoint.cjs');
require('../../../store/state/user/user.cjs');
require('../../../locale/locale.cjs');
require('../../../store/state/projectSettings/projectSettings.cjs');
require('../../../context/AccessDeniedContext/AccessDeniedContext.cjs');
require('../../../context/AccountExistsContext/AccountExistsContext.cjs');
require('../../../context/UserWalletsContext/UserWalletsContext.cjs');
require('../../../context/VerificationContext/VerificationContext.cjs');
require('react-dom');
require('../../../context/WalletContext/WalletContext.cjs');
require('../../../utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.cjs');
require('../../../context/ThemeContext/ThemeContext.cjs');
require('../../../utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.cjs');
require('@dynamic-labs/types');
require('../../../context/LoadingContext/LoadingContext.cjs');
require('yup');
require('../../../context/MockContext/MockContext.cjs');
require('../../CollectUserDataView/useFields.cjs');
require('../../../context/FieldsStateContext/FieldsStateContext.cjs');
require('../../../context/UserFieldEditorContext/UserFieldEditorContext.cjs');
require('@dynamic-labs/rpc-providers');
require('../../../store/state/environmentId.cjs');
require('../../../store/state/walletConnectorOptions.cjs');
var Typography = require('../../../components/Typography/Typography.cjs');
require('../../../context/FooterAnimationContext/index.cjs');
require('../../../components/ShadowDOM/ShadowDOM.cjs');
require('../../../components/Transition/ZoomTransition/ZoomTransition.cjs');
require('../../../components/Transition/SlideInUpTransition/SlideInUpTransition.cjs');
require('../../../components/Transition/OpacityTransition/OpacityTransition.cjs');
require('../../../components/OverlayCard/OverlayCardTarget/OverlayCardTarget.cjs');
require('../../../context/SocialRedirectContext/SocialRedirectContext.cjs');
require('../../../context/WalletGroupContext/WalletGroupContext.cjs');
require('../../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.cjs');
require('react-focus-lock');
var Divider = require('../../../components/Divider/Divider.cjs');
require('../../../widgets/DynamicWidget/context/DynamicWidgetContext.cjs');
require('../../../components/IconButton/IconButton.cjs');
require('../../../components/MenuList/Dropdown/Dropdown.cjs');
require('formik');
require('../../../store/state/sendBalances.cjs');
require('../../../components/Input/Input.cjs');
require('../../TransactionConfirmationView/helpers/transactionErrorMessage.cjs');
require('../../../context/PasskeyContext/PasskeyContext.cjs');
require('../../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.cjs');
require('../../../../polyfills.cjs');
require('../../../context/ErrorBoundary/ErrorBoundaryBase.cjs');
require('../../../context/ErrorBoundary/ErrorBoundaryContext.cjs');
require('../../../widgets/DynamicBridgeWidget/context/DynamicBridgeWidgetContext/DynamicBridgeWidgetContext.cjs');
require('../../../widgets/DynamicWidget/components/DynamicWidgetCard/DynamicWidgetCard.cjs');
require('../../../components/IsBrowser/IsBrowser.cjs');
require('../../../context/WidgetRegistry/WidgetRegistryContextProvider.cjs');
require('../../../context/FundingContext/FundingContext.cjs');
require('../../../components/Popper/Popper/Popper.cjs');
require('../../../components/Popper/PopperContext/PopperContext.cjs');
require('../../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.cjs');
require('@hcaptcha/react-hcaptcha');
require('../../../context/IpConfigurationContext/IpConfigurationContext.cjs');
require('../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.cjs');
require('../../../context/SendBalanceContext/SendBalanceContext.cjs');
require('../../../context/ConnectWithOtpContext/ConnectWithOtpContext.cjs');
require('../../../context/ConnectWithOtpContext/constants.cjs');
require('../../../context/ReinitializeContext/ReinitializeContextProvider.cjs');
require('../../../store/state/tokenBalances.cjs');
require('../../../components/InlineWidget/InlineWidget.cjs');
require('qrcode');

const SwitchWalletView = ({ onCancel, connector, expectedAddress, activeAddress, }) => {
    const { t } = reactI18next.useTranslation();
    return (jsxRuntime.jsx(DefaultPromptModal.DefaultPromptModal, { dataTestId: 'switch-wallet', className: 'switch-wallet', icon: jsxRuntime.jsx(walletBook.WalletIcon, { walletKey: connector.key }), title: t('dyn_sync_wallet.switch_wallet.title'), onClose: onCancel, children: jsxRuntime.jsxs("div", { className: 'switch-wallet__body', children: [activeAddress && (jsxRuntime.jsxs(jsxRuntime.Fragment, { children: [jsxRuntime.jsx(Typography.Typography, { variant: 'body_mini', color: 'secondary', weight: 'regular', copykey: 'dyn_sync_wallet.switch_wallet.active_address.heading', children: t('dyn_sync_wallet.switch_wallet.active_address.heading') }), jsxRuntime.jsx(Typography.Typography, { variant: 'body_normal', color: 'primary', weight: 'regular', children: shortenWalletAddress.shortenWalletAddress(activeAddress, 3, 3) }), jsxRuntime.jsx(Divider.Divider, { className: 'switch-wallet__body__divider', children: jsxRuntime.jsx(arrowCircleRight.ReactComponent, {}) })] })), jsxRuntime.jsx(Typography.Typography, { variant: 'body_mini', color: 'secondary', weight: 'regular', copykey: 'dyn_sync_wallet.switch_wallet.expected_address.heading', children: t('dyn_sync_wallet.switch_wallet.expected_address.heading') }), jsxRuntime.jsx(Typography.Typography, { variant: 'body_normal', color: 'primary', weight: 'regular', copykey: 'dyn_sync_wallet.switch_wallet.expected_address.prompt', className: 'switch-wallet__body__expected-address__prompt', children: t('dyn_sync_wallet.switch_wallet.expected_address.prompt') }), jsxRuntime.jsx(Typography.Typography, { color: 'green-1', weight: 'bold', className: 'switch-wallet__body__expected-address__address', children: shortenWalletAddress.shortenWalletAddress(expectedAddress, 3, 3) })] }) }));
};

exports.SwitchWalletView = SwitchWalletView;
