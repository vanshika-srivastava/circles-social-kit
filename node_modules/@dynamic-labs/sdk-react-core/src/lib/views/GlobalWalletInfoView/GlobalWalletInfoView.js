'use client'
import { jsx, jsxs } from 'react/jsx-runtime';
import { useTranslation } from 'react-i18next';
import { Typography } from '../../components/Typography/Typography.js';
import '@dynamic-labs/sdk-api-core';
import '../../shared/logger.js';
import '@dynamic-labs/iconic';
import '@dynamic-labs/wallet-connector-core';
import '../../context/ViewContext/ViewContext.js';
import 'react';
import { ReactComponent as SvgCopy } from '../../shared/assets/copy.js';
import { ReactComponent as SvgBlueWalletconnect } from '../../shared/assets/blue-walletconnect.js';
import '@dynamic-labs/wallet-book';
import '@dynamic-labs/utils';
import '../../utils/constants/colors.js';
import '../../utils/constants/values.js';
import '../../store/state/loadingAndLifecycle.js';
import '../../shared/consts/index.js';

const InlineIconTypography = ({ children }) => (jsx(Typography, { variant: 'body_small', weight: 'regular', color: 'secondary', children: jsx("span", { className: 'inline-icon-text', children: children }) }));
const GlobalWalletInfoView = () => {
    const { t } = useTranslation();
    // we cannot translate some of this as we have icons inline with text
    return (jsx("div", { className: 'info-card', children: jsxs("div", { className: 'wrapper', children: [jsx(Typography, { variant: 'body_small', weight: 'bold', color: 'primary', as: 'h2', children: "How do I find the URI or QR code?" }), jsx(Typography, { variant: 'body_small', weight: 'regular', color: 'secondary', children: t('global_wallet.help.step.1') }), jsx(Typography, { variant: 'body_small', weight: 'regular', color: 'secondary', children: t('global_wallet.help.step.2') }), jsxs(InlineIconTypography, { children: ["3. Open", ' ', jsxs("span", { className: 'nowrap', children: ["WalletConnect ", jsx(SvgBlueWalletconnect, {})] }), "from the list, this should show a QR code to scan"] }), jsxs(InlineIconTypography, { children: ["4. If you are not using the QR code, locate and click", jsxs("span", { className: 'nowrap', children: [jsx(SvgCopy, {}), " to copy"] }), ' ', "the URI code"] })] }) }));
};

export { GlobalWalletInfoView, GlobalWalletInfoView as default };
