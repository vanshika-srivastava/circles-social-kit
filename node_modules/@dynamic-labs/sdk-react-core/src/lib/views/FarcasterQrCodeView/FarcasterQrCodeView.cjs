'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var sdkApiCore = require('@dynamic-labs/sdk-api-core');
var ErrorContext = require('../../context/ErrorContext/ErrorContext.cjs');
var FarcasterConnectView = require('../FarcasterConnectView/FarcasterConnectView.cjs');
var useSocialAuth = require('../../utils/hooks/useSocialAuth/useSocialAuth.cjs');
require('../../shared/logger.cjs');
require('@dynamic-labs/iconic');
require('@dynamic-labs/wallet-connector-core');
require('../../context/ViewContext/ViewContext.cjs');
require('@dynamic-labs/wallet-book');
require('@dynamic-labs/utils');
require('../../utils/constants/colors.cjs');
require('../../utils/constants/values.cjs');
var useEffectOnce = require('../../shared/utils/hooks/useEffectOnce/useEffectOnce.cjs');
require('../../store/state/loadingAndLifecycle.cjs');
require('../../shared/consts/index.cjs');

/**
 * This view is used to display the QR code for the farcaster connection.
 * It is only used in the login view when Farcaster is the only available login method.
 */
const FarcasterQrCodeView = () => {
    const { setError } = ErrorContext.useErrorContext();
    const [url, setUrl] = React.useState(undefined);
    const { connectSocialAccount } = useSocialAuth.useSocialAuth({
        onError: () => setError('Something went wrong'),
        onFarcasterUrl: (url) => setUrl(url),
        sessionTimeout: 20000,
    });
    useEffectOnce.useEffectOnce(() => {
        connectSocialAccount({
            authMode: 'signin',
            provider: sdkApiCore.ProviderEnum.Farcaster,
        });
    });
    return jsxRuntime.jsx(FarcasterConnectView.FarcasterConnectView, { url: url !== null && url !== void 0 ? url : '' });
};

exports.FarcasterQrCodeView = FarcasterQrCodeView;
