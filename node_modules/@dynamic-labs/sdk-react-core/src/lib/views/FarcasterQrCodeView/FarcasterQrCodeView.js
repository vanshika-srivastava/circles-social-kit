'use client'
import { jsx } from 'react/jsx-runtime';
import { useState } from 'react';
import { ProviderEnum } from '@dynamic-labs/sdk-api-core';
import { useErrorContext } from '../../context/ErrorContext/ErrorContext.js';
import { FarcasterConnectView } from '../FarcasterConnectView/FarcasterConnectView.js';
import { useSocialAuth } from '../../utils/hooks/useSocialAuth/useSocialAuth.js';
import '../../shared/logger.js';
import '@dynamic-labs/iconic';
import '@dynamic-labs/wallet-connector-core';
import '../../context/ViewContext/ViewContext.js';
import '@dynamic-labs/wallet-book';
import '@dynamic-labs/utils';
import '../../utils/constants/colors.js';
import '../../utils/constants/values.js';
import { useEffectOnce } from '../../shared/utils/hooks/useEffectOnce/useEffectOnce.js';
import '../../store/state/loadingAndLifecycle.js';
import '../../shared/consts/index.js';

/**
 * This view is used to display the QR code for the farcaster connection.
 * It is only used in the login view when Farcaster is the only available login method.
 */
const FarcasterQrCodeView = () => {
    const { setError } = useErrorContext();
    const [url, setUrl] = useState(undefined);
    const { connectSocialAccount } = useSocialAuth({
        onError: () => setError('Something went wrong'),
        onFarcasterUrl: (url) => setUrl(url),
        sessionTimeout: 20000,
    });
    useEffectOnce(() => {
        connectSocialAccount({
            authMode: 'signin',
            provider: ProviderEnum.Farcaster,
        });
    });
    return jsx(FarcasterConnectView, { url: url !== null && url !== void 0 ? url : '' });
};

export { FarcasterQrCodeView };
