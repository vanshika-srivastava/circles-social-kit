import { CreateMfaToken, MFADevice, MFADeviceType, VerifyResponse } from '@dynamic-labs/sdk-api-core';
export declare const getUserMfaDevices: ({ environmentId, }: {
    environmentId: string;
}) => Promise<MFADevice[]>;
export declare const addMfaDevice: ({ environmentId, type, }: {
    environmentId: string;
    type: MFADeviceType;
}) => Promise<import("@dynamic-labs/sdk-api-core").MFARegisterTotpDeviceGetResponse>;
export declare const updateUserMfaDevice: ({ environmentId, mfaDeviceId, }: {
    environmentId: string;
    mfaDeviceId: string;
}) => Promise<void>;
export declare const deleteMfaDevice: ({ environmentId, mfaDeviceId, mfaAuthToken, }: {
    environmentId: string;
    mfaDeviceId: string;
    mfaAuthToken: string;
}) => Promise<void>;
export declare const verifyMfaDevice: ({ environmentId, type, code, }: {
    environmentId: string;
    type: MFADeviceType;
    code: string;
}) => Promise<MFADevice | undefined>;
export declare const authMfaDevice: ({ deviceId, environmentId, type, code, createMfaToken, }: {
    deviceId?: string;
    environmentId: string;
    type: MFADeviceType;
    code: string;
    createMfaToken?: CreateMfaToken;
}) => Promise<VerifyResponse>;
export declare const getRecoveryCodes: ({ environmentId, }: {
    environmentId: string;
}) => Promise<string[]>;
export declare const createNewRecoveryCodes: ({ environmentId, }: {
    environmentId: string;
}) => Promise<string[]>;
export declare const authMfaRecovery: ({ environmentId, code, }: {
    environmentId: string;
    code: string;
}) => Promise<VerifyResponse | undefined>;
