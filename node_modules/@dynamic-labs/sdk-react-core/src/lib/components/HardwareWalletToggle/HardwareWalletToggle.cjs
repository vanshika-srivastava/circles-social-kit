'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var Toggle = require('../Toggle/Toggle.cjs');
var Icon = require('../Icon/Icon.cjs');
require('@dynamic-labs/sdk-api-core');
require('../../shared/logger.cjs');
require('@dynamic-labs/iconic');
require('@dynamic-labs/wallet-connector-core');
require('../../context/ViewContext/ViewContext.cjs');
require('react');
var check = require('../../shared/assets/check.cjs');
require('@dynamic-labs/wallet-book');
require('@dynamic-labs/utils');
require('../../utils/constants/colors.cjs');
require('../../utils/constants/values.cjs');
require('../../store/state/loadingAndLifecycle.cjs');
require('../../shared/consts/index.cjs');
var ListTile = require('../ListTile/ListTile.cjs');

const HardwareWalletToggle = ({ connectors, label, copykey, }) => {
    const toggle = (jsxRuntime.jsx(Toggle.Toggle, { defaultChecked: connectors.some((connector) => connector.isHardwareWalletEnabled), onChange: (event) => {
            connectors.forEach((connector) => {
                connector.isHardwareWalletEnabled = event.target.checked;
            });
        }, "data-testid": 'hardware-wallet-toggle', icon: 
        // eslint-disable-next-line react/jsx-wrap-multilines
        jsxRuntime.jsx(Icon.Icon, { size: 'small', children: jsxRuntime.jsx(check.ReactComponent, {}) }) }));
    return (jsxRuntime.jsx(ListTile.ListTile, { trailing: toggle, children: jsxRuntime.jsx("span", { copykey, children: label }) }));
};

exports.HardwareWalletToggle = HardwareWalletToggle;
