'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var classNames = require('../../../../utils/functions/classNames/classNames.cjs');
require('../../../Accordion/components/AccordionItem/AccordionItem.cjs');
require('../../../Alert/Alert.cjs');
require('react');
require('../../../../events/dynamicEvents.cjs');
require('../../../../../../_virtual/_tslib.cjs');
require('@dynamic-labs/utils');
require('../../../../context/DynamicContext/DynamicContext.cjs');
require('@dynamic-labs/sdk-api-core');
require('../../../../shared/logger.cjs');
require('@dynamic-labs/iconic');
require('@dynamic-labs/wallet-connector-core');
require('../../../../context/ViewContext/ViewContext.cjs');
var check = require('../../../../shared/assets/check.cjs');
var error = require('../../../../shared/assets/error.cjs');
require('@dynamic-labs/wallet-book');
require('../../../../utils/constants/colors.cjs');
require('../../../../utils/constants/values.cjs');
require('../../../../store/state/loadingAndLifecycle.cjs');
require('../../../../shared/consts/index.cjs');
require('../../../../context/CaptchaContext/CaptchaContext.cjs');
require('../../../../context/ErrorContext/ErrorContext.cjs');
require('@dynamic-labs/multi-wallet');
require('react-international-phone');
require('../../../../config/ApiEndpoint.cjs');
require('../../../../store/state/user/user.cjs');
require('../../../../locale/locale.cjs');
require('../../../../store/state/projectSettings/projectSettings.cjs');
require('../../../../context/AccessDeniedContext/AccessDeniedContext.cjs');
require('../../../../context/AccountExistsContext/AccountExistsContext.cjs');
require('../../../../context/UserWalletsContext/UserWalletsContext.cjs');
require('../../../../context/VerificationContext/VerificationContext.cjs');
require('react-dom');
require('../../../../context/WalletContext/WalletContext.cjs');
require('../../../../utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.cjs');
require('../../../../context/ThemeContext/ThemeContext.cjs');
require('../../../../utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.cjs');
require('@dynamic-labs/types');
require('../../../../context/LoadingContext/LoadingContext.cjs');
require('yup');
require('../../../../context/MockContext/MockContext.cjs');
require('../../../../views/CollectUserDataView/useFields.cjs');
require('../../../../context/FieldsStateContext/FieldsStateContext.cjs');
require('../../../../context/UserFieldEditorContext/UserFieldEditorContext.cjs');
require('@dynamic-labs/rpc-providers');
require('../../../../store/state/environmentId.cjs');
require('../../../../store/state/walletConnectorOptions.cjs');
require('react-i18next');
var Typography = require('../../../Typography/Typography.cjs');
require('../../../../context/FooterAnimationContext/index.cjs');
require('../../../ShadowDOM/ShadowDOM.cjs');
require('../../../Transition/ZoomTransition/ZoomTransition.cjs');
require('../../../Transition/SlideInUpTransition/SlideInUpTransition.cjs');
require('../../../Transition/OpacityTransition/OpacityTransition.cjs');
require('../../../OverlayCard/OverlayCardTarget/OverlayCardTarget.cjs');
require('../../../../context/SocialRedirectContext/SocialRedirectContext.cjs');
require('../../../../context/WalletGroupContext/WalletGroupContext.cjs');
require('../../../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.cjs');
require('react-focus-lock');
var Spinner = require('../../../IconWithSpinner/Spinner/Spinner.cjs');
require('../../../../widgets/DynamicWidget/context/DynamicWidgetContext.cjs');
require('../../../IconButton/IconButton.cjs');
require('../../../MenuList/Dropdown/Dropdown.cjs');
require('formik');
require('../../../../store/state/sendBalances.cjs');
require('../../../Input/Input.cjs');
require('../../../../views/TransactionConfirmationView/helpers/transactionErrorMessage.cjs');
require('../../../../context/PasskeyContext/PasskeyContext.cjs');
require('../../../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.cjs');
require('../../../../../polyfills.cjs');
require('../../../../context/ErrorBoundary/ErrorBoundaryBase.cjs');
require('../../../../context/ErrorBoundary/ErrorBoundaryContext.cjs');
require('../../../../widgets/DynamicBridgeWidget/context/DynamicBridgeWidgetContext/DynamicBridgeWidgetContext.cjs');
require('../../../../widgets/DynamicWidget/components/DynamicWidgetCard/DynamicWidgetCard.cjs');
require('../../../IsBrowser/IsBrowser.cjs');
require('../../../../context/WidgetRegistry/WidgetRegistryContextProvider.cjs');
require('../../../../context/FundingContext/FundingContext.cjs');
require('../../../Popper/Popper/Popper.cjs');
require('../../../Popper/PopperContext/PopperContext.cjs');
require('../../../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.cjs');
require('@hcaptcha/react-hcaptcha');
require('../../../../context/IpConfigurationContext/IpConfigurationContext.cjs');
require('../../../PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.cjs');
require('../../../../context/SendBalanceContext/SendBalanceContext.cjs');
require('../../../../context/ConnectWithOtpContext/ConnectWithOtpContext.cjs');
require('../../../../context/ConnectWithOtpContext/constants.cjs');
require('../../../../context/ReinitializeContext/ReinitializeContextProvider.cjs');
require('../../../../store/state/tokenBalances.cjs');
require('../../../InlineWidget/InlineWidget.cjs');
require('qrcode');

const Network = ({ iconUrl, isActive, networkName, className, checkboxClassName = '', isChanging, notSupported = false, }) => (jsxRuntime.jsxs("div", { className: classNames.classNames('network', className, {
        'network--not-supported': notSupported,
    }), children: [jsxRuntime.jsxs("div", { className: 'network__container', children: [iconUrl ? (jsxRuntime.jsx("img", { src: iconUrl, className: 'network__title-icon', alt: `${networkName} icon` })) : (jsxRuntime.jsx(error.ReactComponent, {})), jsxRuntime.jsxs("div", { className: 'network__title-container', children: [jsxRuntime.jsx(Typography.Typography, { variant: 'button_primary', className: 'network__title-copy', as: 'span', weight: 'medium', color: notSupported ? 'secondary' : 'primary', children: networkName }), notSupported && (jsxRuntime.jsx(Typography.Typography, { variant: 'body_mini', className: 'network__title-copy', as: 'span', weight: 'medium', color: notSupported ? 'secondary' : 'primary', "data-testid": 'network-not-supported', children: "Switch network in your wallet" }))] })] }), jsxRuntime.jsxs("div", { className: classNames.classNames('network__status-container', {
                'network__status-container--active': isActive,
            }, checkboxClassName), "data-testid": 'single-network-checkbox', children: [isActive && jsxRuntime.jsx(check.ReactComponent, { className: 'network__status-icon' }), isChanging && (jsxRuntime.jsx(Spinner.Spinner, { className: 'network__status-spinner-icon', size: 12 }))] })] }));

exports.Network = Network;
