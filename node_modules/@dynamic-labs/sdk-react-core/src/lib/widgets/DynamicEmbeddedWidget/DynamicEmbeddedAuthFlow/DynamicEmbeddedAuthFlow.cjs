'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
require('../../../components/Accordion/components/AccordionItem/AccordionItem.cjs');
require('../../../components/Alert/Alert.cjs');
var dynamicEvents = require('../../../events/dynamicEvents.cjs');
require('../../../../../_virtual/_tslib.cjs');
require('@dynamic-labs/utils');
require('../../../context/DynamicContext/DynamicContext.cjs');
require('@dynamic-labs/sdk-api-core');
require('../../../shared/logger.cjs');
require('@dynamic-labs/iconic');
require('@dynamic-labs/wallet-connector-core');
var ViewContext = require('../../../context/ViewContext/ViewContext.cjs');
require('@dynamic-labs/wallet-book');
require('../../../utils/constants/colors.cjs');
require('../../../utils/constants/values.cjs');
require('../../../store/state/loadingAndLifecycle.cjs');
require('../../../shared/consts/index.cjs');
var useInternalDynamicContext = require('../../../context/DynamicContext/useDynamicContext/useInternalDynamicContext.cjs');
require('../../../context/CaptchaContext/CaptchaContext.cjs');
require('../../../context/ErrorContext/ErrorContext.cjs');
require('@dynamic-labs/multi-wallet');
require('react-international-phone');
require('../../../config/ApiEndpoint.cjs');
require('../../../store/state/user/user.cjs');
require('../../../locale/locale.cjs');
require('../../../store/state/projectSettings/projectSettings.cjs');
require('../../../context/AccessDeniedContext/AccessDeniedContext.cjs');
require('../../../context/AccountExistsContext/AccountExistsContext.cjs');
require('../../../context/UserWalletsContext/UserWalletsContext.cjs');
require('../../../context/VerificationContext/VerificationContext.cjs');
require('react-dom');
require('../../../context/WalletContext/WalletContext.cjs');
require('../../../utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.cjs');
require('../../../context/ThemeContext/ThemeContext.cjs');
var useIsLoggedIn = require('../../../utils/hooks/useIsLoggedIn/useIsLoggedIn.cjs');
require('../../../utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.cjs');
require('@dynamic-labs/types');
require('../../../context/LoadingContext/LoadingContext.cjs');
require('yup');
require('../../../context/MockContext/MockContext.cjs');
require('../../../views/CollectUserDataView/useFields.cjs');
require('../../../context/FieldsStateContext/FieldsStateContext.cjs');
require('../../../context/UserFieldEditorContext/UserFieldEditorContext.cjs');
require('@dynamic-labs/rpc-providers');
require('../../../store/state/environmentId.cjs');
require('../../../store/state/walletConnectorOptions.cjs');
require('react-i18next');
var DynamicAuthLayout = require('../../../layout/DynamicAuthLayout/DynamicAuthLayout.cjs');
var ShadowDOM = require('../../../components/ShadowDOM/ShadowDOM.cjs');
require('../../../components/Transition/ZoomTransition/ZoomTransition.cjs');
require('../../../components/Transition/SlideInUpTransition/SlideInUpTransition.cjs');
require('../../../components/Transition/OpacityTransition/OpacityTransition.cjs');
require('../../../components/OverlayCard/OverlayCardTarget/OverlayCardTarget.cjs');
require('../../DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.cjs');
var ModalCard = require('../../../components/ModalCard/ModalCard.cjs');
require('react-focus-lock');
require('../../DynamicWidget/context/DynamicWidgetContext.cjs');
require('../../../components/IconButton/IconButton.cjs');
require('../../../components/MenuList/Dropdown/Dropdown.cjs');
require('formik');
require('../../../store/state/sendBalances.cjs');
require('../../../components/Input/Input.cjs');
require('../../../views/TransactionConfirmationView/helpers/transactionErrorMessage.cjs');
require('../../../context/PasskeyContext/PasskeyContext.cjs');
require('../../DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.cjs');
var index = require('../../../context/FooterAnimationContext/index.cjs');
require('../../../../polyfills.cjs');
require('../../../context/ErrorBoundary/ErrorBoundaryBase.cjs');
require('../../../context/ErrorBoundary/ErrorBoundaryContext.cjs');
require('../../DynamicBridgeWidget/context/DynamicBridgeWidgetContext/DynamicBridgeWidgetContext.cjs');
require('../../DynamicWidget/components/DynamicWidgetCard/DynamicWidgetCard.cjs');
require('../../../components/IsBrowser/IsBrowser.cjs');
require('../../../context/WidgetRegistry/WidgetRegistryContextProvider.cjs');
require('../../../context/FundingContext/FundingContext.cjs');
require('../../../components/Popper/Popper/Popper.cjs');
var PopperContext = require('../../../components/Popper/PopperContext/PopperContext.cjs');
require('../../../context/WalletGroupContext/WalletGroupContext.cjs');
require('../../../context/SocialRedirectContext/SocialRedirectContext.cjs');
require('../../DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.cjs');
require('@hcaptcha/react-hcaptcha');
require('../../../context/IpConfigurationContext/IpConfigurationContext.cjs');
require('../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.cjs');
require('../../../context/SendBalanceContext/SendBalanceContext.cjs');
require('../../../context/ConnectWithOtpContext/ConnectWithOtpContext.cjs');
require('../../../context/ConnectWithOtpContext/constants.cjs');
require('../../../context/ReinitializeContext/ReinitializeContextProvider.cjs');
require('../../../store/state/tokenBalances.cjs');
require('../../../components/InlineWidget/InlineWidget.cjs');
require('qrcode');
var RenderView = require('../../../components/RenderView/RenderView.cjs');
var SandboxIndicatorWrapper = require('../../../components/SandboxIndicatorWrapper/SandboxIndicatorWrapper.cjs');

const DynamicEmbeddedAuthFlow = ({ background = 'none', className, style, }) => {
    const hide = useIsLoggedIn.useIsLoggedIn();
    const { projectSettings, isRenderingEmbeddedAuthFlow, walletConnectorOptions, } = useInternalDynamicContext.useInternalDynamicContext();
    // This is needed to make sure WalletConnect is initialized for users who are using
    // universal links on mobile. This also happens in useShowAuthFlow, but since this
    // is the embedded auth flow, that hook does not get called.
    // Without initializing WalletConnect here, users end up hitting the iOS app store bug
    // and are redirected to the app store, instead of the wallet
    React.useEffect(() => {
        var _a;
        (_a = walletConnectorOptions
            .find((wallet) => wallet.walletConnector.key === 'walletconnect')) === null || _a === void 0 ? void 0 : _a.walletConnector.init();
    }, [walletConnectorOptions]);
    const { goToInitialView: resetAuthView } = ViewContext.useViewContext();
    // Reset view when user logs out
    React.useEffect(() => {
        dynamicEvents.dynamicEvents.addListener('logout', resetAuthView);
        return () => {
            dynamicEvents.dynamicEvents.removeListener('logout', resetAuthView);
        };
    }, [resetAuthView]);
    isRenderingEmbeddedAuthFlow.current = !hide;
    // Keep isRenderingEmbeddedAuthFlow up to date
    React.useEffect(() => () => {
        isRenderingEmbeddedAuthFlow.current = false;
    }, [isRenderingEmbeddedAuthFlow]);
    if (hide)
        return null;
    const content = (jsxRuntime.jsx(DynamicAuthLayout.DynamicAuthLayout, { className: className, style: style, projectSettings: projectSettings, children: jsxRuntime.jsx(RenderView.RenderView, {}) }));
    return (jsxRuntime.jsx(ShadowDOM.ShadowDOM, { className: 'embedded-widget', children: jsxRuntime.jsx(PopperContext.PopperProvider, { children: jsxRuntime.jsx(index.FooterAnimationContextProvider, { children: jsxRuntime.jsx(SandboxIndicatorWrapper.SandboxIndicatorWrapper, { children: background === 'none' ? (content) : (jsxRuntime.jsx(ModalCard.ModalCard, { border: background === 'with-border', sharpBottomRadiusOnMobile: false, children: content })) }) }) }) }));
};

exports.DynamicEmbeddedAuthFlow = DynamicEmbeddedAuthFlow;
