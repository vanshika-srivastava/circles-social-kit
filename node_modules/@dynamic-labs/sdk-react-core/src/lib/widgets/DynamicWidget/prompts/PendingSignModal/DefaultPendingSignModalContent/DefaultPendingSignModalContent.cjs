'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../../../../../../_virtual/_tslib.cjs');
var jsxRuntime = require('react/jsx-runtime');
var utils = require('@dynamic-labs/utils');
var walletBook = require('@dynamic-labs/wallet-book');
var walletConnectorCore = require('@dynamic-labs/wallet-connector-core');
require('../../../../../components/Accordion/components/AccordionItem/AccordionItem.cjs');
require('../../../../../components/Alert/Alert.cjs');
require('react');
require('../../../../../events/dynamicEvents.cjs');
require('../../../../../context/DynamicContext/DynamicContext.cjs');
require('@dynamic-labs/sdk-api-core');
require('../../../../../shared/logger.cjs');
require('@dynamic-labs/iconic');
require('../../../../../context/ViewContext/ViewContext.cjs');
require('../../../../../utils/constants/colors.cjs');
require('../../../../../utils/constants/values.cjs');
require('../../../../../store/state/loadingAndLifecycle.cjs');
require('../../../../../shared/consts/index.cjs');
var useInternalDynamicContext = require('../../../../../context/DynamicContext/useDynamicContext/useInternalDynamicContext.cjs');
require('../../../../../context/CaptchaContext/CaptchaContext.cjs');
require('../../../../../context/ErrorContext/ErrorContext.cjs');
require('@dynamic-labs/multi-wallet');
require('react-international-phone');
require('../../../../../config/ApiEndpoint.cjs');
require('../../../../../store/state/user/user.cjs');
require('../../../../../locale/locale.cjs');
require('../../../../../store/state/projectSettings/projectSettings.cjs');
require('../../../../../context/AccessDeniedContext/AccessDeniedContext.cjs');
require('../../../../../context/AccountExistsContext/AccountExistsContext.cjs');
require('../../../../../context/UserWalletsContext/UserWalletsContext.cjs');
var useConnectAndSignSplitSteps = require('../../../../../utils/hooks/authenticationHooks/useConnectAndSignSplitSteps/useConnectAndSignSplitSteps.cjs');
require('../../../../../context/VerificationContext/VerificationContext.cjs');
require('react-dom');
require('../../../../../context/WalletContext/WalletContext.cjs');
require('../../../../../utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.cjs');
require('../../../../../context/ThemeContext/ThemeContext.cjs');
require('../../../../../utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.cjs');
require('@dynamic-labs/types');
require('../../../../../context/LoadingContext/LoadingContext.cjs');
require('yup');
require('../../../../../context/MockContext/MockContext.cjs');
require('../../../../../views/CollectUserDataView/useFields.cjs');
require('../../../../../context/FieldsStateContext/FieldsStateContext.cjs');
require('../../../../../context/UserFieldEditorContext/UserFieldEditorContext.cjs');
require('@dynamic-labs/rpc-providers');
require('../../../../../store/state/environmentId.cjs');
require('../../../../../store/state/walletConnectorOptions.cjs');
require('react-i18next');
var Typography = require('../../../../../components/Typography/Typography.cjs');
require('../../../../../context/FooterAnimationContext/index.cjs');
require('../../../../../components/ShadowDOM/ShadowDOM.cjs');
require('../../../../../components/Transition/ZoomTransition/ZoomTransition.cjs');
require('../../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.cjs');
require('../../../../../components/Transition/OpacityTransition/OpacityTransition.cjs');
require('../../../../../components/OverlayCard/OverlayCardTarget/OverlayCardTarget.cjs');
require('../../../../../context/SocialRedirectContext/SocialRedirectContext.cjs');
require('../../../../../context/WalletGroupContext/WalletGroupContext.cjs');
require('../../../components/DynamicWidgetHeader/DynamicWidgetHeader.cjs');
require('react-focus-lock');
var useCloseMultiWalletPrompt = require('../../../hooks/useCloseMultiWalletPrompt/useCloseMultiWalletPrompt.cjs');
var DefaultPromptModal = require('../../DefaultPromptModal/DefaultPromptModal.cjs');
require('../../../context/DynamicWidgetContext.cjs');
require('../../../../../components/IconButton/IconButton.cjs');
require('../../../../../components/MenuList/Dropdown/Dropdown.cjs');
var TypographyButton = require('../../../../../components/TypographyButton/TypographyButton.cjs');
require('formik');
require('../../../../../store/state/sendBalances.cjs');
require('../../../../../components/Input/Input.cjs');
require('../../../../../views/TransactionConfirmationView/helpers/transactionErrorMessage.cjs');
require('../../../../../context/PasskeyContext/PasskeyContext.cjs');
require('../../../views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.cjs');
require('../../../../../../polyfills.cjs');
require('../../../../../context/ErrorBoundary/ErrorBoundaryBase.cjs');
require('../../../../../context/ErrorBoundary/ErrorBoundaryContext.cjs');
require('../../../../DynamicBridgeWidget/context/DynamicBridgeWidgetContext/DynamicBridgeWidgetContext.cjs');
require('../../../components/DynamicWidgetCard/DynamicWidgetCard.cjs');
require('../../../../../components/IsBrowser/IsBrowser.cjs');
require('../../../../../context/WidgetRegistry/WidgetRegistryContextProvider.cjs');
require('../../../../../context/FundingContext/FundingContext.cjs');
require('../../../../../components/Popper/Popper/Popper.cjs');
require('../../../../../components/Popper/PopperContext/PopperContext.cjs');
require('../../../../DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.cjs');
require('@hcaptcha/react-hcaptcha');
require('../../../../../context/IpConfigurationContext/IpConfigurationContext.cjs');
require('../../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.cjs');
require('../../../../../context/SendBalanceContext/SendBalanceContext.cjs');
require('../../../../../context/ConnectWithOtpContext/ConnectWithOtpContext.cjs');
require('../../../../../context/ConnectWithOtpContext/constants.cjs');
require('../../../../../context/ReinitializeContext/ReinitializeContextProvider.cjs');
require('../../../../../store/state/tokenBalances.cjs');
require('../../../../../components/InlineWidget/InlineWidget.cjs');
require('qrcode');

const DefaultPendingSignModalContent = () => {
    const { selectedWalletConnector, setMultiWalletWidgetState } = useInternalDynamicContext.useInternalDynamicContext();
    const { signAlreadyConnectedUser } = useConnectAndSignSplitSteps.useConnectAndSignSplitSteps();
    const onClickToSign = () => _tslib.__awaiter(void 0, void 0, void 0, function* () {
        try {
            if (selectedWalletConnector) {
                yield signAlreadyConnectedUser({
                    walletConnector: selectedWalletConnector,
                });
            }
        }
        catch (e) {
            walletConnectorCore.logger.error(e);
        }
        finally {
            setMultiWalletWidgetState('idle');
        }
    });
    return (jsxRuntime.jsxs(DefaultPromptModal.DefaultPromptModal, { onClose: useCloseMultiWalletPrompt.useCloseMultiWalletPrompt(), dataTestId: 'pending-account-switch', icon: jsxRuntime.jsx(walletBook.WalletIcon, { walletKey: selectedWalletConnector === null || selectedWalletConnector === void 0 ? void 0 : selectedWalletConnector.key }), children: [jsxRuntime.jsx(Typography.Typography, { variant: 'body_normal', color: 'secondary', weight: 'regular', "data-testid": 'content', children: "Sign the message in your wallet to approve linking this wallet to your account" }), utils.isMobile() &&
                !(selectedWalletConnector === null || selectedWalletConnector === void 0 ? void 0 : selectedWalletConnector.canConnectViaCustodialService) && (jsxRuntime.jsx(TypographyButton.TypographyButton, { buttonClassName: 'default-prompt-modal__button', expanded: true, type: 'button', buttonPadding: 'medium', typographyProps: { variant: 'button_secondary' }, onClick: onClickToSign, dataTestId: 'click-to-sign-button', children: "Click to Sign" }))] }));
};

exports.DefaultPendingSignModalContent = DefaultPendingSignModalContent;
