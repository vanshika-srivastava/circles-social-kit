'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var reactI18next = require('react-i18next');
var sdkApiCore = require('@dynamic-labs/sdk-api-core');
require('../../../../../components/Accordion/components/AccordionItem/AccordionItem.cjs');
require('../../../../../components/Alert/Alert.cjs');
require('react');
require('../../../../../events/dynamicEvents.cjs');
require('../../../../../../../_virtual/_tslib.cjs');
require('@dynamic-labs/utils');
require('../../../../../context/DynamicContext/DynamicContext.cjs');
require('../../../../../shared/logger.cjs');
require('@dynamic-labs/iconic');
require('@dynamic-labs/wallet-connector-core');
require('../../../../../context/ViewContext/ViewContext.cjs');
var copy = require('../../../../../shared/assets/copy.cjs');
require('@dynamic-labs/wallet-book');
var shortenWalletAddress = require('../../../../../shared/utils/functions/shortenWalletAddress/shortenWalletAddress.cjs');
require('../../../../../utils/constants/colors.cjs');
require('../../../../../utils/constants/values.cjs');
require('../../../../../store/state/loadingAndLifecycle.cjs');
require('../../../../../shared/consts/index.cjs');
require('../../../../../context/CaptchaContext/CaptchaContext.cjs');
require('../../../../../context/ErrorContext/ErrorContext.cjs');
require('@dynamic-labs/multi-wallet');
require('react-international-phone');
var getWalletAdditionalAddressByType = require('../../../../../utils/functions/getWalletAdditionalAddressByType/getWalletAdditionalAddressByType.cjs');
require('../../../../../config/ApiEndpoint.cjs');
require('../../../../../store/state/user/user.cjs');
require('../../../../../locale/locale.cjs');
require('../../../../../store/state/projectSettings/projectSettings.cjs');
require('../../../../../context/AccessDeniedContext/AccessDeniedContext.cjs');
require('../../../../../context/AccountExistsContext/AccountExistsContext.cjs');
require('../../../../../context/UserWalletsContext/UserWalletsContext.cjs');
require('../../../../../context/VerificationContext/VerificationContext.cjs');
require('react-dom');
require('../../../../../context/WalletContext/WalletContext.cjs');
require('../../../../../utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.cjs');
require('../../../../../context/ThemeContext/ThemeContext.cjs');
require('../../../../../utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.cjs');
require('@dynamic-labs/types');
require('../../../../../context/LoadingContext/LoadingContext.cjs');
require('yup');
require('../../../../../context/MockContext/MockContext.cjs');
require('../../../../../views/CollectUserDataView/useFields.cjs');
require('../../../../../context/FieldsStateContext/FieldsStateContext.cjs');
require('../../../../../context/UserFieldEditorContext/UserFieldEditorContext.cjs');
require('@dynamic-labs/rpc-providers');
require('../../../../../store/state/environmentId.cjs');
require('../../../../../store/state/walletConnectorOptions.cjs');
var Typography = require('../../../../../components/Typography/Typography.cjs');
require('../../../../../context/FooterAnimationContext/index.cjs');
require('../../../../../components/ShadowDOM/ShadowDOM.cjs');
require('../../../../../components/Transition/ZoomTransition/ZoomTransition.cjs');
require('../../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.cjs');
require('../../../../../components/Transition/OpacityTransition/OpacityTransition.cjs');
require('../../../../../components/OverlayCard/OverlayCardTarget/OverlayCardTarget.cjs');
require('../../../../../context/SocialRedirectContext/SocialRedirectContext.cjs');
require('../../../../../context/WalletGroupContext/WalletGroupContext.cjs');
require('../../DynamicWidgetHeader/DynamicWidgetHeader.cjs');
require('react-focus-lock');
var Icon = require('../../../../../components/Icon/Icon.cjs');
require('../../../context/DynamicWidgetContext.cjs');
var DotsMenu = require('../../DotsMenu/DotsMenu.cjs');
require('formik');
require('../../../../../store/state/sendBalances.cjs');
require('../../../../../components/IconButton/IconButton.cjs');
require('../../../../../components/Input/Input.cjs');
require('../../../../../components/MenuList/Dropdown/Dropdown.cjs');
require('../../../../../views/TransactionConfirmationView/helpers/transactionErrorMessage.cjs');
require('../../../../../context/PasskeyContext/PasskeyContext.cjs');
require('../../../views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.cjs');
require('../../../../../../polyfills.cjs');
require('../../../../../context/ErrorBoundary/ErrorBoundaryBase.cjs');
require('../../../../../context/ErrorBoundary/ErrorBoundaryContext.cjs');
require('../../../../DynamicBridgeWidget/context/DynamicBridgeWidgetContext/DynamicBridgeWidgetContext.cjs');
require('../../DynamicWidgetCard/DynamicWidgetCard.cjs');
require('../../../../../components/IsBrowser/IsBrowser.cjs');
require('../../../../../context/WidgetRegistry/WidgetRegistryContextProvider.cjs');
require('../../../../../context/FundingContext/FundingContext.cjs');
require('../../../../../components/Popper/Popper/Popper.cjs');
require('../../../../../components/Popper/PopperContext/PopperContext.cjs');
require('../../../../DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.cjs');
require('@hcaptcha/react-hcaptcha');
require('../../../../../context/IpConfigurationContext/IpConfigurationContext.cjs');
require('../../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.cjs');
require('../../../../../context/SendBalanceContext/SendBalanceContext.cjs');
require('../../../../../context/ConnectWithOtpContext/ConnectWithOtpContext.cjs');
require('../../../../../context/ConnectWithOtpContext/constants.cjs');
require('../../../../../context/ReinitializeContext/ReinitializeContextProvider.cjs');
require('../../../../../store/state/tokenBalances.cjs');
var CopyButton = require('../../../../../components/CopyButton/CopyButton.cjs');
require('../../../../../components/InlineWidget/InlineWidget.cjs');
require('qrcode');

const ActiveBitcoinWalletAddresses = ({ menuOption, wallet }) => {
    var _a, _b;
    const { t } = reactI18next.useTranslation();
    const ordinalsAddress = (_a = getWalletAdditionalAddressByType.getWalletAdditionalAddressByType(sdkApiCore.WalletAddressType.Ordinals, wallet)) !== null && _a !== void 0 ? _a : wallet === null || wallet === void 0 ? void 0 : wallet.address;
    const paymenyAddress = (_b = getWalletAdditionalAddressByType.getWalletAdditionalAddressByType(sdkApiCore.WalletAddressType.Payment, wallet)) !== null && _b !== void 0 ? _b : wallet === null || wallet === void 0 ? void 0 : wallet.address;
    return (jsxRuntime.jsxs(jsxRuntime.Fragment, { children: [jsxRuntime.jsxs("div", { className: 'active-wallet-information__address-container', children: [jsxRuntime.jsxs("div", { children: [jsxRuntime.jsx(Typography.Typography, { className: 'active-wallet-information__address', weight: 'regular', variant: 'body_small', color: 'secondary', children: t('dyn_active_wallet_info.ordinals_address') }), jsxRuntime.jsx(Typography.Typography, { className: 'active-wallet-information__address', weight: 'medium', variant: 'body_normal', color: 'primary', children: shortenWalletAddress.shortenWalletAddress(ordinalsAddress, 4, 4) })] }), jsxRuntime.jsx(DotsMenu.DotsMenu, { "data-testid": 'dots-menu', options: menuOption, buttonClassName: 'active-wallet-information__dots-menu', buttonClassNameWithOpenMenu: 'active-wallet-information__dots-menu' })] }), jsxRuntime.jsxs("div", { className: 'active-wallet-information__address-container', children: [jsxRuntime.jsxs("div", { children: [jsxRuntime.jsx(Typography.Typography, { className: 'active-wallet-information__address', weight: 'regular', variant: 'body_small', color: 'secondary', children: t('dyn_active_wallet_info.payment_address') }), jsxRuntime.jsx(Typography.Typography, { className: 'active-wallet-information__address', weight: 'regular', variant: 'body_small', color: 'primary', children: shortenWalletAddress.shortenWalletAddress(paymenyAddress, 4, 4) })] }), jsxRuntime.jsx(CopyButton.CopyButton, { textToCopy: paymenyAddress !== null && paymenyAddress !== void 0 ? paymenyAddress : '', children: jsxRuntime.jsx(Icon.Icon, { size: 'xsmall', children: jsxRuntime.jsx(copy.ReactComponent, {}) }) })] })] }));
};

exports.ActiveBitcoinWalletAddresses = ActiveBitcoinWalletAddresses;
