'use client'
import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { useRef, useState } from 'react';
import { Icon } from '../../../../components/Icon/Icon.js';
import { IconButton } from '../../../../components/IconButton/IconButton.js';
import { Dropdown } from '../../../../components/MenuList/Dropdown/Dropdown.js';
import { DotsMenuDropdown } from '../DotsMenuDropdown/DotsMenuDropdown.js';
import { useOnClickOutside } from '../../../../shared/utils/hooks/useOnClickOutside/index.js';
import '@dynamic-labs/iconic';
import '../../../../context/ViewContext/ViewContext.js';
import { ReactComponent as SvgThreeDots } from '../../../../shared/assets/three-dots.js';

const DotsMenu = ({ options, buttonClassName, buttonClassNameWithOpenMenu, direction = 'right', iconOverride, }) => {
    const dotsMenuRef = useRef(null);
    const popperContentRef = useRef(null);
    const [showMenu, setShowMenu] = useState(false);
    useOnClickOutside(popperContentRef, () => setShowMenu(false));
    return (jsxs(Fragment, { children: [jsx(IconButton, { ref: dotsMenuRef, onClick: () => setShowMenu(true), "data-testid": 'dotsMenu', className: showMenu ? buttonClassNameWithOpenMenu : buttonClassName, children: iconOverride ? (iconOverride) : (jsx(Icon, { children: jsx(SvgThreeDots, {}) })) }), jsx(Dropdown, { isOpen: showMenu, onClickOutside: () => setShowMenu(false), onScroll: () => setShowMenu(false), anchorRef: dotsMenuRef, ref: popperContentRef, anchorOrigin: direction === 'right' ? 'bottom-left' : 'top-right', transformOrigin: direction === 'right' ? 'top-left' : 'bottom-right', children: jsx(DotsMenuDropdown, { options: options, setShowMenu: setShowMenu }) })] }));
};

export { DotsMenu };
