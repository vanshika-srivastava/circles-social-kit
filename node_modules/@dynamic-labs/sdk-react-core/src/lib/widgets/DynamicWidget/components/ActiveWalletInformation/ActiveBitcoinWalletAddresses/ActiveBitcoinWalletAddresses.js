'use client'
import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { useTranslation } from 'react-i18next';
import { WalletAddressType } from '@dynamic-labs/sdk-api-core';
import '../../../../../components/Accordion/components/AccordionItem/AccordionItem.js';
import '../../../../../components/Alert/Alert.js';
import 'react';
import '../../../../../events/dynamicEvents.js';
import '../../../../../../../_virtual/_tslib.js';
import '@dynamic-labs/utils';
import '../../../../../context/DynamicContext/DynamicContext.js';
import '../../../../../shared/logger.js';
import '@dynamic-labs/iconic';
import '@dynamic-labs/wallet-connector-core';
import '../../../../../context/ViewContext/ViewContext.js';
import { ReactComponent as SvgCopy } from '../../../../../shared/assets/copy.js';
import '@dynamic-labs/wallet-book';
import { shortenWalletAddress } from '../../../../../shared/utils/functions/shortenWalletAddress/shortenWalletAddress.js';
import '../../../../../utils/constants/colors.js';
import '../../../../../utils/constants/values.js';
import '../../../../../store/state/loadingAndLifecycle.js';
import '../../../../../shared/consts/index.js';
import '../../../../../context/CaptchaContext/CaptchaContext.js';
import '../../../../../context/ErrorContext/ErrorContext.js';
import '@dynamic-labs/multi-wallet';
import 'react-international-phone';
import { getWalletAdditionalAddressByType } from '../../../../../utils/functions/getWalletAdditionalAddressByType/getWalletAdditionalAddressByType.js';
import '../../../../../config/ApiEndpoint.js';
import '../../../../../store/state/user/user.js';
import '../../../../../locale/locale.js';
import '../../../../../store/state/projectSettings/projectSettings.js';
import '../../../../../context/AccessDeniedContext/AccessDeniedContext.js';
import '../../../../../context/AccountExistsContext/AccountExistsContext.js';
import '../../../../../context/UserWalletsContext/UserWalletsContext.js';
import '../../../../../context/VerificationContext/VerificationContext.js';
import 'react-dom';
import '../../../../../context/WalletContext/WalletContext.js';
import '../../../../../utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.js';
import '../../../../../context/ThemeContext/ThemeContext.js';
import '../../../../../utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';
import '@dynamic-labs/types';
import '../../../../../context/LoadingContext/LoadingContext.js';
import 'yup';
import '../../../../../context/MockContext/MockContext.js';
import '../../../../../views/CollectUserDataView/useFields.js';
import '../../../../../context/FieldsStateContext/FieldsStateContext.js';
import '../../../../../context/UserFieldEditorContext/UserFieldEditorContext.js';
import '@dynamic-labs/rpc-providers';
import '../../../../../store/state/environmentId.js';
import '../../../../../store/state/walletConnectorOptions.js';
import { Typography } from '../../../../../components/Typography/Typography.js';
import '../../../../../context/FooterAnimationContext/index.js';
import '../../../../../components/ShadowDOM/ShadowDOM.js';
import '../../../../../components/Transition/ZoomTransition/ZoomTransition.js';
import '../../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';
import '../../../../../components/Transition/OpacityTransition/OpacityTransition.js';
import '../../../../../components/OverlayCard/OverlayCardTarget/OverlayCardTarget.js';
import '../../../../../context/SocialRedirectContext/SocialRedirectContext.js';
import '../../../../../context/WalletGroupContext/WalletGroupContext.js';
import '../../DynamicWidgetHeader/DynamicWidgetHeader.js';
import 'react-focus-lock';
import { Icon } from '../../../../../components/Icon/Icon.js';
import '../../../context/DynamicWidgetContext.js';
import { DotsMenu } from '../../DotsMenu/DotsMenu.js';
import 'formik';
import '../../../../../store/state/sendBalances.js';
import '../../../../../components/IconButton/IconButton.js';
import '../../../../../components/Input/Input.js';
import '../../../../../components/MenuList/Dropdown/Dropdown.js';
import '../../../../../views/TransactionConfirmationView/helpers/transactionErrorMessage.js';
import '../../../../../context/PasskeyContext/PasskeyContext.js';
import '../../../views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.js';
import '../../../../../../polyfills.js';
import '../../../../../context/ErrorBoundary/ErrorBoundaryBase.js';
import '../../../../../context/ErrorBoundary/ErrorBoundaryContext.js';
import '../../../../DynamicBridgeWidget/context/DynamicBridgeWidgetContext/DynamicBridgeWidgetContext.js';
import '../../DynamicWidgetCard/DynamicWidgetCard.js';
import '../../../../../components/IsBrowser/IsBrowser.js';
import '../../../../../context/WidgetRegistry/WidgetRegistryContextProvider.js';
import '../../../../../context/FundingContext/FundingContext.js';
import '../../../../../components/Popper/Popper/Popper.js';
import '../../../../../components/Popper/PopperContext/PopperContext.js';
import '../../../../DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';
import '@hcaptcha/react-hcaptcha';
import '../../../../../context/IpConfigurationContext/IpConfigurationContext.js';
import '../../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';
import '../../../../../context/SendBalanceContext/SendBalanceContext.js';
import '../../../../../context/ConnectWithOtpContext/ConnectWithOtpContext.js';
import '../../../../../context/ConnectWithOtpContext/constants.js';
import '../../../../../context/ReinitializeContext/ReinitializeContextProvider.js';
import '../../../../../store/state/tokenBalances.js';
import { CopyButton } from '../../../../../components/CopyButton/CopyButton.js';
import '../../../../../components/InlineWidget/InlineWidget.js';
import 'qrcode';

const ActiveBitcoinWalletAddresses = ({ menuOption, wallet }) => {
    var _a, _b;
    const { t } = useTranslation();
    const ordinalsAddress = (_a = getWalletAdditionalAddressByType(WalletAddressType.Ordinals, wallet)) !== null && _a !== void 0 ? _a : wallet === null || wallet === void 0 ? void 0 : wallet.address;
    const paymenyAddress = (_b = getWalletAdditionalAddressByType(WalletAddressType.Payment, wallet)) !== null && _b !== void 0 ? _b : wallet === null || wallet === void 0 ? void 0 : wallet.address;
    return (jsxs(Fragment, { children: [jsxs("div", { className: 'active-wallet-information__address-container', children: [jsxs("div", { children: [jsx(Typography, { className: 'active-wallet-information__address', weight: 'regular', variant: 'body_small', color: 'secondary', children: t('dyn_active_wallet_info.ordinals_address') }), jsx(Typography, { className: 'active-wallet-information__address', weight: 'medium', variant: 'body_normal', color: 'primary', children: shortenWalletAddress(ordinalsAddress, 4, 4) })] }), jsx(DotsMenu, { "data-testid": 'dots-menu', options: menuOption, buttonClassName: 'active-wallet-information__dots-menu', buttonClassNameWithOpenMenu: 'active-wallet-information__dots-menu' })] }), jsxs("div", { className: 'active-wallet-information__address-container', children: [jsxs("div", { children: [jsx(Typography, { className: 'active-wallet-information__address', weight: 'regular', variant: 'body_small', color: 'secondary', children: t('dyn_active_wallet_info.payment_address') }), jsx(Typography, { className: 'active-wallet-information__address', weight: 'regular', variant: 'body_small', color: 'primary', children: shortenWalletAddress(paymenyAddress, 4, 4) })] }), jsx(CopyButton, { textToCopy: paymenyAddress !== null && paymenyAddress !== void 0 ? paymenyAddress : '', children: jsx(Icon, { size: 'xsmall', children: jsx(SvgCopy, {}) }) })] })] }));
};

export { ActiveBitcoinWalletAddresses };
