'use client'
import { jsxs, jsx } from 'react/jsx-runtime';
import { Image } from '../../../../../components/Image/Image.js';
import '../../../../../components/Accordion/components/AccordionItem/AccordionItem.js';
import '../../../../../components/Alert/Alert.js';
import 'react';
import '../../../../../events/dynamicEvents.js';
import '../../../../../../../_virtual/_tslib.js';
import '@dynamic-labs/utils';
import '../../../../../context/DynamicContext/DynamicContext.js';
import '@dynamic-labs/sdk-api-core';
import '../../../../../shared/logger.js';
import '@dynamic-labs/iconic';
import '@dynamic-labs/wallet-connector-core';
import '../../../../../context/ViewContext/ViewContext.js';
import '@dynamic-labs/wallet-book';
import '../../../../../utils/constants/colors.js';
import '../../../../../utils/constants/values.js';
import '../../../../../store/state/loadingAndLifecycle.js';
import '../../../../../shared/consts/index.js';
import { useInternalDynamicContext } from '../../../../../context/DynamicContext/useDynamicContext/useInternalDynamicContext.js';
import '../../../../../context/CaptchaContext/CaptchaContext.js';
import '../../../../../context/ErrorContext/ErrorContext.js';
import '@dynamic-labs/multi-wallet';
import 'react-international-phone';
import '../../../../../config/ApiEndpoint.js';
import '../../../../../store/state/user/user.js';
import '../../../../../locale/locale.js';
import '../../../../../store/state/projectSettings/projectSettings.js';
import '../../../../../context/AccessDeniedContext/AccessDeniedContext.js';
import '../../../../../context/AccountExistsContext/AccountExistsContext.js';
import '../../../../../context/UserWalletsContext/UserWalletsContext.js';
import '../../../../../context/VerificationContext/VerificationContext.js';
import 'react-dom';
import '../../../../../context/WalletContext/WalletContext.js';
import '../../../../../utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.js';
import '../../../../../context/ThemeContext/ThemeContext.js';
import '../../../../../utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';
import '@dynamic-labs/types';
import '../../../../../context/LoadingContext/LoadingContext.js';
import 'yup';
import '../../../../../context/MockContext/MockContext.js';
import '../../../../../views/CollectUserDataView/useFields.js';
import '../../../../../context/FieldsStateContext/FieldsStateContext.js';
import '../../../../../context/UserFieldEditorContext/UserFieldEditorContext.js';
import '@dynamic-labs/rpc-providers';
import '../../../../../store/state/environmentId.js';
import '../../../../../store/state/walletConnectorOptions.js';
import 'react-i18next';
import { Typography } from '../../../../../components/Typography/Typography.js';
import '../../../../../context/FooterAnimationContext/index.js';
import '../../../../../components/ShadowDOM/ShadowDOM.js';
import '../../../../../components/Transition/ZoomTransition/ZoomTransition.js';
import '../../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';
import '../../../../../components/Transition/OpacityTransition/OpacityTransition.js';
import '../../../../../components/OverlayCard/OverlayCardTarget/OverlayCardTarget.js';
import '../../../../../context/SocialRedirectContext/SocialRedirectContext.js';
import '../../../../../context/WalletGroupContext/WalletGroupContext.js';
import '../../DynamicWidgetHeader/DynamicWidgetHeader.js';
import 'react-focus-lock';
import '../../../context/DynamicWidgetContext.js';
import '../../../../../components/IconButton/IconButton.js';
import '../../../../../components/MenuList/Dropdown/Dropdown.js';
import 'formik';
import '../../../../../store/state/sendBalances.js';
import '../../../../../components/Input/Input.js';
import '../../../../../views/TransactionConfirmationView/helpers/transactionErrorMessage.js';
import '../../../../../context/PasskeyContext/PasskeyContext.js';
import '../../../views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.js';
import '../../../../../../polyfills.js';
import '../../../../../context/ErrorBoundary/ErrorBoundaryBase.js';
import '../../../../../context/ErrorBoundary/ErrorBoundaryContext.js';
import '../../../../DynamicBridgeWidget/context/DynamicBridgeWidgetContext/DynamicBridgeWidgetContext.js';
import '../../DynamicWidgetCard/DynamicWidgetCard.js';
import '../../../../../components/IsBrowser/IsBrowser.js';
import '../../../../../context/WidgetRegistry/WidgetRegistryContextProvider.js';
import '../../../../../context/FundingContext/FundingContext.js';
import '../../../../../components/Popper/Popper/Popper.js';
import '../../../../../components/Popper/PopperContext/PopperContext.js';
import '../../../../DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';
import '@hcaptcha/react-hcaptcha';
import '../../../../../context/IpConfigurationContext/IpConfigurationContext.js';
import '../../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';
import '../../../../../context/SendBalanceContext/SendBalanceContext.js';
import '../../../../../context/ConnectWithOtpContext/ConnectWithOtpContext.js';
import '../../../../../context/ConnectWithOtpContext/constants.js';
import '../../../../../context/ReinitializeContext/ReinitializeContextProvider.js';
import '../../../../../store/state/tokenBalances.js';
import '../../../../../components/InlineWidget/InlineWidget.js';
import 'qrcode';

const currencyFormatter = new Intl.NumberFormat('en-US', {
    currency: 'USD',
    style: 'currency',
});
const TokenBalanceItem = ({ tokenBalance, }) => {
    const { showFiat } = useInternalDynamicContext();
    const roundToSixDecimal = (value) => {
        const rounded = Math.round(value * 1e6) / 1e6; // 10^6 is 1000000
        return rounded === 0 ? '<0.000001' : rounded;
    };
    const formattedFiatValue = () => {
        var _a;
        if (tokenBalance.marketValue !== 0 && !tokenBalance.marketValue) {
            return '$-';
        }
        return tokenBalance.marketValue >= 0.01
            ? currencyFormatter.format(parseFloat((_a = tokenBalance.marketValue) === null || _a === void 0 ? void 0 : _a.toFixed(2)))
            : '<$0.01';
    };
    return (jsxs("div", { className: 'token-balance-item', children: [jsxs("div", { className: 'token-balance-item__name', children: [tokenBalance.logoURI ? (jsx(Image, { src: tokenBalance.logoURI, alt: tokenBalance.symbol, className: 'token-balance-item__icon', dataTestId: 'token-balance-item-icon' })) : (jsx("div", { className: 'token-balance-item__skeleton-icon', "data-testid": 'token-balance-item__skeleton-icon' })), jsx("div", { children: jsx(Typography, { variant: 'body_small', className: 'token-balance-item__title', color: 'primary', children: tokenBalance.name }) })] }), jsxs("div", { className: 'flex', children: [showFiat ? (jsx(Typography, { variant: 'body_small', weight: 'bold', color: 'primary', style: { textAlign: 'right' }, children: formattedFiatValue() })) : null, jsx("div", { className: 'token-balance-item__value', children: jsxs("div", { className: 'token-balance-item__value__balance', "data-testid": 'token-balance-item-balance', children: [jsx(Typography, { variant: 'body_small', color: 'secondary', style: { marginRight: '2px' }, children: roundToSixDecimal(tokenBalance.balance) }), jsx(Typography, { variant: 'body_small', color: 'secondary', children: tokenBalance.symbol })] }) })] })] }, tokenBalance.address));
};

export { TokenBalanceItem };
