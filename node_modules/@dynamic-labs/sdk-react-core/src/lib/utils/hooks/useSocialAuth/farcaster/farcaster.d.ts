interface FarcasterConnectRequest {
    siweUri: string;
    domain: string;
    nonce?: string;
    notBefore?: string;
    expirationTime?: string;
    requestId?: string;
    redirectUrl?: string;
}
interface FarcasterConnectResponse {
    /** Connect relay channel token UUID */
    channelToken: string;
    /** Sign in With Farcaster URL to present to the user */
    url: string;
}
interface FarcasterConnectStatusRequest {
    channelToken: string;
}
interface FarcasterConnectStatusResponse {
    bio: string;
    custody: string;
    displayName: string;
    fid: string;
    message: string;
    nonce: string;
    pfpUrl: string;
    signature: string;
    state: 'pending' | 'completed';
    username: string;
}
export declare const connect: (connectRequest: FarcasterConnectRequest) => Promise<FarcasterConnectResponse | undefined>;
export declare const status: (connectStatusRequest: FarcasterConnectStatusRequest) => Promise<FarcasterConnectStatusResponse | undefined>;
export declare const watchStatus: (connectStatusRequest: FarcasterConnectStatusRequest, { timeout, interval }?: {
    timeout?: number | undefined;
    interval?: number | undefined;
}) => Promise<FarcasterConnectStatusResponse | 'timeout' | 'rejected' | 'cancelled'>;
export {};
