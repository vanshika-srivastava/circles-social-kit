'use client'
import { __awaiter } from '../../../../../_virtual/_tslib.js';
import { useCallback } from 'react';
import { useDynamicContext } from '../../../context/DynamicContext/useDynamicContext/useDynamicContext.js';
import '../../../context/DynamicContext/DynamicContext.js';
import { useViewContext } from '../../../context/ViewContext/ViewContext.js';

const useSwitchNetwork = () => {
    const { setShowAuthFlow } = useDynamicContext();
    const { setView } = useViewContext();
    const switchNetwork = useCallback((_a) => __awaiter(void 0, [_a], void 0, function* ({ wallet, network, }) {
        if (wallet.connector.switchNetworkOnlyFromWallet) {
            setShowAuthFlow(true);
            setView('network-not-supported-manual');
            return;
        }
        yield wallet.connector.switchNetwork({ networkChainId: network });
    }), [setShowAuthFlow, setView]);
    return switchNetwork;
};

export { useSwitchNetwork };
