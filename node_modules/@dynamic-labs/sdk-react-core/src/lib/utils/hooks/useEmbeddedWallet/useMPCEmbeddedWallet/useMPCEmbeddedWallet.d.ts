import { EmbeddedWalletChainEnum } from '@dynamic-labs/sdk-api-core';
import { Wallet } from '../../../../shared';
/**
 * @returns {
 *  createEmbeddedWallet, - creates Dynamic or MPC embedded wallet according to the settings
 *  createPassword, - creates MPC embedded wallet password
 *  isLoadingEmbeddedWallet, - loading state of the embedded wallet
 *  userHasEmbeddedWallet, - checks if the user has an embedded wallet
 * }
 */
export declare const useMPCEmbeddedWallet: () => {
    readonly canCreateMPCWallet: (chains?: EmbeddedWalletChainEnum[]) => Promise<boolean>;
    readonly createEmbeddedWallet: (chains?: EmbeddedWalletChainEnum[]) => Promise<Wallet | undefined>;
    readonly createPassword: (showIntro?: boolean) => Promise<string>;
    readonly isLoadingEmbeddedWallet: boolean;
    readonly revealEmbeddedWalletKey: () => Promise<never>;
    readonly userHasEmbeddedWallet: () => boolean;
};
