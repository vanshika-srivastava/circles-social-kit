'use client'
import { useMemo, useEffect } from 'react';
import { getWallets } from '../../../views/WalletList/data.js';
import '@dynamic-labs/sdk-api-core';
import '../../constants/values.js';
import '@dynamic-labs/utils';
import '../../../../../_virtual/_tslib.js';
import '@dynamic-labs/multi-wallet';
import '../../../shared/logger.js';
import '../../constants/colors.js';
import 'react-international-phone';
import '@dynamic-labs/iconic';
import '@dynamic-labs/wallet-connector-core';
import 'react/jsx-runtime';
import '../../../context/ViewContext/ViewContext.js';
import '@dynamic-labs/wallet-book';
import '../../../store/state/loadingAndLifecycle.js';
import '../../../shared/consts/index.js';
import '../../../config/ApiEndpoint.js';
import '../../../store/state/user/user.js';
import '../../../locale/locale.js';
import { serializeWalletConnectors } from '../../functions/serializeWalletConnectors/serializeWalletConnectors.js';
import '../../../store/state/projectSettings/projectSettings.js';
import { setWalletConnectorOptions } from '../../../store/state/walletConnectorOptions.js';
import { verifyRequiredConnectorsAreSetup } from './utils/verifyRequiredConnectorsAreSetup/verifyRequiredConnectorsAreSetup.js';

const useWalletConnectorOptions = ({ projectSettings, appLogoUrl, appName, coinbaseWalletPreference, deepLinkPreference, flowNetwork, mobileExperience, networkConfigurations, walletBook, walletUiUtils, walletConnectorsProp, walletConnectPreferredChains, walletConnectorExtensions, }) => {
    const walletConnectorsKey = useMemo(() => { var _a; return (_a = serializeWalletConnectors(walletConnectorsProp)) === null || _a === void 0 ? void 0 : _a.join(','); }, [walletConnectorsProp]);
    const walletBookLength = useMemo(() => Object.keys(walletBook !== null && walletBook !== void 0 ? walletBook : {}).length, [walletBook]);
    const walletConnectorOptions = useMemo(() => {
        if (!projectSettings ||
            !Object.keys(walletBook !== null && walletBook !== void 0 ? walletBook : {}).length ||
            !networkConfigurations)
            return [];
        return getWallets({
            getSupportedWalletOpts: {
                appLogoUrl,
                appName,
                coinbaseWalletPreference,
                deepLinkPreference,
                flowNetwork,
                mobileExperience,
                networkConfigurations,
                settings: projectSettings,
                skipMemo: true,
                walletBook,
                walletConnectPreferredChains,
                walletConnectorsProp: walletConnectorsProp !== null && walletConnectorsProp !== void 0 ? walletConnectorsProp : [],
                walletUiUtils,
            },
            walletConnectorExtensions,
        });
        // Cannot include walletUiUtils in the dependency array because it will cause an infinite loop
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        appLogoUrl,
        appName,
        projectSettings,
        walletConnectorsKey,
        walletConnectPreferredChains,
        flowNetwork,
        walletBookLength,
        networkConfigurations,
    ]);
    useEffect(() => {
        if (!projectSettings || walletConnectorOptions.length === 0)
            return;
        verifyRequiredConnectorsAreSetup(projectSettings, walletConnectorOptions.map(({ walletConnector }) => walletConnector));
        setWalletConnectorOptions(walletConnectorOptions);
    }, [walletConnectorOptions, projectSettings]);
    return { walletConnectorOptions };
};

export { useWalletConnectorOptions };
