'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var data = require('../../../views/WalletList/data.cjs');
require('@dynamic-labs/sdk-api-core');
require('../../constants/values.cjs');
require('@dynamic-labs/utils');
require('../../../../../_virtual/_tslib.cjs');
require('@dynamic-labs/multi-wallet');
require('../../../shared/logger.cjs');
require('../../constants/colors.cjs');
require('react-international-phone');
require('@dynamic-labs/iconic');
require('@dynamic-labs/wallet-connector-core');
require('react/jsx-runtime');
require('../../../context/ViewContext/ViewContext.cjs');
require('@dynamic-labs/wallet-book');
require('../../../store/state/loadingAndLifecycle.cjs');
require('../../../shared/consts/index.cjs');
require('../../../config/ApiEndpoint.cjs');
require('../../../store/state/user/user.cjs');
require('../../../locale/locale.cjs');
var serializeWalletConnectors = require('../../functions/serializeWalletConnectors/serializeWalletConnectors.cjs');
require('../../../store/state/projectSettings/projectSettings.cjs');
var walletConnectorOptions = require('../../../store/state/walletConnectorOptions.cjs');
var verifyRequiredConnectorsAreSetup = require('./utils/verifyRequiredConnectorsAreSetup/verifyRequiredConnectorsAreSetup.cjs');

const useWalletConnectorOptions = ({ projectSettings, appLogoUrl, appName, coinbaseWalletPreference, deepLinkPreference, flowNetwork, mobileExperience, networkConfigurations, walletBook, walletUiUtils, walletConnectorsProp, walletConnectPreferredChains, walletConnectorExtensions, }) => {
    const walletConnectorsKey = React.useMemo(() => { var _a; return (_a = serializeWalletConnectors.serializeWalletConnectors(walletConnectorsProp)) === null || _a === void 0 ? void 0 : _a.join(','); }, [walletConnectorsProp]);
    const walletBookLength = React.useMemo(() => Object.keys(walletBook !== null && walletBook !== void 0 ? walletBook : {}).length, [walletBook]);
    const walletConnectorOptions$1 = React.useMemo(() => {
        if (!projectSettings ||
            !Object.keys(walletBook !== null && walletBook !== void 0 ? walletBook : {}).length ||
            !networkConfigurations)
            return [];
        return data.getWallets({
            getSupportedWalletOpts: {
                appLogoUrl,
                appName,
                coinbaseWalletPreference,
                deepLinkPreference,
                flowNetwork,
                mobileExperience,
                networkConfigurations,
                settings: projectSettings,
                skipMemo: true,
                walletBook,
                walletConnectPreferredChains,
                walletConnectorsProp: walletConnectorsProp !== null && walletConnectorsProp !== void 0 ? walletConnectorsProp : [],
                walletUiUtils,
            },
            walletConnectorExtensions,
        });
        // Cannot include walletUiUtils in the dependency array because it will cause an infinite loop
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        appLogoUrl,
        appName,
        projectSettings,
        walletConnectorsKey,
        walletConnectPreferredChains,
        flowNetwork,
        walletBookLength,
        networkConfigurations,
    ]);
    React.useEffect(() => {
        if (!projectSettings || walletConnectorOptions$1.length === 0)
            return;
        verifyRequiredConnectorsAreSetup.verifyRequiredConnectorsAreSetup(projectSettings, walletConnectorOptions$1.map(({ walletConnector }) => walletConnector));
        walletConnectorOptions.setWalletConnectorOptions(walletConnectorOptions$1);
    }, [walletConnectorOptions$1, projectSettings]);
    return { walletConnectorOptions: walletConnectorOptions$1 };
};

exports.useWalletConnectorOptions = useWalletConnectorOptions;
