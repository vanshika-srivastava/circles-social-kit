'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var sdkApiCore = require('@dynamic-labs/sdk-api-core');
var utils = require('@dynamic-labs/utils');
var projectSettings = require('../../../store/state/projectSettings/projectSettings.cjs');

const isCookieEnabled = () => {
    var _a, _b, _c, _d;
    /**
     * There is no cookie on native mobile applications
     * so this feature must be disabled for native mobile
     */
    if (utils.PlatformService.isNativeMobile) {
        return false;
    }
    const securitySettings = (_b = (_a = projectSettings.getProjectSettings()) === null || _a === void 0 ? void 0 : _a.settings) === null || _b === void 0 ? void 0 : _b.security;
    if (!securitySettings)
        return false;
    // client uses Dynamic cookies
    const dynamicCookiesEnabled = (((_c = securitySettings.auth) === null || _c === void 0 ? void 0 : _c.storage) || []).includes(sdkApiCore.AuthStorageEnum.Cookie);
    // BYO JWT client puts their non-Dynamic JWT in a cookie
    const byoJwtCookieEnabled = Boolean((_d = securitySettings.externalAuth) === null || _d === void 0 ? void 0 : _d.cookieName);
    // should return true for both of these scenarios
    // because we also need to do `credentials: true` in api.ts when
    // a byo jwt client sets their named cookie for their jwt and
    // needs to send it to our backend
    return dynamicCookiesEnabled || byoJwtCookieEnabled;
};

exports.isCookieEnabled = isCookieEnabled;
