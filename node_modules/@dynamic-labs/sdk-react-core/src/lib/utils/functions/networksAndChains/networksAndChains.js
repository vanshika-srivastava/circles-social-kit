'use client'
const eth = {
    logoURI: 'https://app.dynamic.xyz/assets/networks/eth.svg',
    name: 'Ethereum',
    symbol: 'ETH',
};
const networkMap = {
    avalanche: {
        logoURI: 'https://app.dynamic.xyz/assets/networks/avax.svg',
        name: 'Avalanche',
        symbol: 'AVAX',
    },
    polygon: {
        logoURI: 'https://app.dynamic.xyz/assets/networks/polygon.svg',
        name: 'Polygon',
        symbol: 'MATIC',
    },
    solana: {
        logoURI: 'https://app.dynamic.xyz/assets/networks/solana.svg',
        name: 'Solana',
        symbol: 'SOL',
    },
};
const getNativeTokenInfo = (blockchain = 'eth') => networkMap[blockchain] || eth;
const allowedChains = {
    'arbitrum one': 'arbitrum',
    avalanche: 'avalanche',
    base: 'base',
    eth: 'eth',
    'op mainnet': 'optimism',
    optimism: 'optimism',
    polygon: 'polygon',
    sepolia: 'sepolia',
    solana: 'solana',
};
const getEvmChainName = (chainId) => {
    const map = {
        1: 'Ethereum',
        10: 'OP Mainnet',
        11155111: 'Sepolia',
        137: 'Polygon',
        42161: 'Arbitrum One',
        43114: 'Avalanche',
        8453: 'Base',
    };
    return map[chainId] || 'Unknown';
};
const getIconUrl = (chainName) => {
    const chain = allowedChains[chainName === null || chainName === void 0 ? void 0 : chainName.toLowerCase()] || 'eth';
    return `https://app.dynamic.xyz/assets/networks/${chain}.svg`;
};

export { allowedChains, getEvmChainName, getIconUrl, getNativeTokenInfo };
