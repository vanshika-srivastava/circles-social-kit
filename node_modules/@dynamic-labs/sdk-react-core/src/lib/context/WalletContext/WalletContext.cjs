'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');

const WalletContext = React.createContext(undefined);
const WalletContextProvider = ({ children, }) => {
    const [isLoadingEmbeddedWallet, setIsLoadingEmbeddedWallet] = React.useState(false);
    const value = React.useMemo(() => ({
        isLoadingEmbeddedWallet,
        setIsLoadingEmbeddedWallet,
    }), [isLoadingEmbeddedWallet]);
    return (jsxRuntime.jsx(WalletContext.Provider, { value: value, children: children }));
};
const useWalletContext = () => {
    const context = React.useContext(WalletContext);
    if (context === undefined) {
        throw new Error('usage of useWalletContext not wrapped in `WalletContextProvider`.');
    }
    return context;
};

exports.WalletContext = WalletContext;
exports.WalletContextProvider = WalletContextProvider;
exports.useWalletContext = useWalletContext;
