'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');

const VerificationContext = React.createContext(undefined);
// Context used to hold verificationUUID & email between views.
const VerificationProvider = ({ children }) => {
    const [displayedDestination, setDisplayedDestination] = React.useState(undefined);
    const [verificationUUID, setVerificationUUID] = React.useState(undefined);
    const [retryData, setRetryData] = React.useState(undefined);
    const value = React.useMemo(() => ({
        displayedDestination,
        retryData,
        setDisplayedDestination,
        setRetryData,
        setVerificationUUID,
        verificationUUID,
    }), [displayedDestination, retryData, verificationUUID]);
    return (jsxRuntime.jsx(VerificationContext.Provider, { value: value, children: children }));
};
const useVerification = () => {
    const context = React.useContext(VerificationContext);
    if (context === undefined) {
        throw new Error('usage of useVerification not wrapped in `VerificationProvider`.');
    }
    return context;
};

exports.VerificationContext = VerificationContext;
exports.VerificationProvider = VerificationProvider;
exports.useVerification = useVerification;
