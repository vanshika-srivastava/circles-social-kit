'use client'
import { __awaiter } from '../../../../../_virtual/_tslib.js';
import { getEmailProvider } from '../../../data/api/email/email.js';
import '@dynamic-labs/sdk-api-core';
import '@dynamic-labs/utils';
import '../../../shared/logger.js';
import '@dynamic-labs/iconic';
import '@dynamic-labs/wallet-connector-core';
import 'react/jsx-runtime';
import '../../ViewContext/ViewContext.js';
import 'react';
import '@dynamic-labs/wallet-book';
import '../../../utils/constants/colors.js';
import '../../../utils/constants/values.js';
import '../../../store/state/loadingAndLifecycle.js';
import '../../../shared/consts/index.js';
import '@dynamic-labs/multi-wallet';
import 'react-international-phone';
import '../../../store/state/projectSettings/projectSettings.js';
import '../../../store/state/user/user.js';
import '../../../config/ApiEndpoint.js';
import '../../../locale/locale.js';
import { allSupportedProviders } from '../constants.js';

const findEmailProvider = (environmentId, email) => __awaiter(void 0, void 0, void 0, function* () {
    const { emailProvider } = yield getEmailProvider({
        email,
        environmentId,
    });
    if (!allSupportedProviders.includes(emailProvider)) {
        throw new Error('Email provider is not supported');
    }
    return emailProvider;
});

export { findEmailProvider };
