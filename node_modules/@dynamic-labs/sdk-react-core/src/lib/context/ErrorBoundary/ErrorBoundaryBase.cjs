'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
require('@dynamic-labs/sdk-api-core');
var logger = require('../../shared/logger.cjs');
require('@dynamic-labs/iconic');
require('@dynamic-labs/wallet-connector-core');
require('react/jsx-runtime');
require('../ViewContext/ViewContext.cjs');
require('@dynamic-labs/wallet-book');
require('@dynamic-labs/utils');
require('../../utils/constants/colors.cjs');
require('../../utils/constants/values.cjs');
require('../../store/state/loadingAndLifecycle.cjs');
require('../../shared/consts/index.cjs');
var ErrorContainer = require('../../components/ErrorContainer/ErrorContainer.cjs');
var ErrorBoundaryContext = require('./ErrorBoundaryContext.cjs');

class ErrorBoundaryBase extends React.Component {
    static getDerivedStateFromError(error) {
        return { error, hasError: true };
    }
    renderOrError(children, { isDynamicSdkError }) {
        try {
            ErrorBoundaryContext.assertErrorBoundaryContext(this.context);
            this.context.isDynamicSdkError = isDynamicSdkError;
        }
        catch (e) {
            logger.logger.error(e);
            return React.createElement(ErrorContainer.ErrorContainer, null, 'ErrorBoundary must be used within ErrorBoundaryContext');
        }
        return children;
    }
}
ErrorBoundaryBase.contextType = ErrorBoundaryContext.ErrorBoundaryContext;

exports.ErrorBoundaryBase = ErrorBoundaryBase;
