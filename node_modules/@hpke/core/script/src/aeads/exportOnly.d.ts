import type { AeadEncryptionContext } from "../interfaces/aeadEncryptionContext.js";
import type { AeadInterface } from "../interfaces/aeadInterface.js";
import { AeadId } from "../identifiers.js";
/**
 * The ExportOnly mode for HPKE AEAD implementing {@link AeadInterface}.
 *
 * When using `@hpke/core`, the instance of this class must be specified
 * to the `aead` parameter of {@link CipherSuiteParams} instead of `AeadId.ExportOnly`
 * as follows:
 *
 * @example
 *
 * ```ts
 * import {
 *   CipherSuite,
 *   DhkemP256HkdfSha256,
 *   ExportOnly,
 *   HkdfSha256,
 * } from "http://deno.land/x/hpke/core/mod.ts";
 *
 * const suite = new CipherSuite({
 *   kem: new DhkemP256HkdfSha256(),
 *   kdf: new HkdfSha256(),
 *   aead: new ExportOnly(),
 * });
 * ```
 */
export declare class ExportOnly implements AeadInterface {
    readonly id: AeadId;
    readonly keySize: number;
    readonly nonceSize: number;
    readonly tagSize: number;
    createEncryptionContext(_key: ArrayBuffer): AeadEncryptionContext;
}
//# sourceMappingURL=exportOnly.d.ts.map