export interface Profile {
    name: string;
    description?: string;
    previewImageUrl?: string;
    imageUrl?: string;
}
export interface GroupProfile extends Profile {
    symbol: string;
}
export declare class Profiles {
    private readonly profileServiceUrl;
    constructor(profileServiceUrl: string);
    private getProfileServiceUrl;
    create(profile: Profile): Promise<string>;
    /**
     * Retrieves a profile by its CID. If the profile is not found, an error is thrown.
     * @param cid The CID of the profile to retrieve.
     */
    get(cid: string): Promise<Profile | undefined>;
    /**
     * Retrieves multiple profiles by their CIDs. If a profile is not found, it will not be included in the result.
     * @param cids The CIDs of the profiles to retrieve.
     * @returns A map of CIDs to profiles. If a profile is not found, it will not be included in the map.
     */
    getMany(cids: string[]): Promise<Record<string, Profile>>;
}
//# sourceMappingURL=index.d.ts.map